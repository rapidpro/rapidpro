-extends "smartmin/read.haml"

-load compress i18n

-block html-tag
  <html lang="en" ng-app="locations">
    <div class="init" ng-init="osmId='{{object.osm_id}}'"/>

-block page-top

-block content

  #ctrl{ng-controller:'BoundaryController'}
    #editor
      // full country (level 0)
      .details
        %h3
          -blocktrans with name=object.name
            Aliases for {{ name }}
        %h5
          -blocktrans with brand=brand.name
            Often certain regions are known by more than one name. In {{ brand }}, we call these alternate names for
            regions, aliases.

      .loading{ng-show:'!boundaries'}
        %img{src:'{{STATIC_URL}}images/loader-circles.gif'}

      // only show the search if they haven't selected anything
      .search{ng-show:'!stateBoundary && boundaries'}
        %input.filter{ ng-model:"query", placeholder:'Search', ng-model-options:"{ debounce: 200 }"}
        %a.btn.btn-primary.btn-tiny.clear-button{ ng-show:'query.trim().length > 0', ng-click:'reset();'}
          -trans "Clear"
        .search-results
          .state{ng-repeat:'state in boundaries | filter: { match: query }'}
            .name
              %a{href:'javascript:void(0);', ng-click: "clickBoundary(state)"}
                [[ state.name ]]
            .aliases{ng-show:'state.aliases.strip().length > 0'}
              [[state.aliases | collapse ]]
            .districts{ng-show:'query.trim().length > 0'}
              .district{ng-repeat:'district in state.children | filter: { match: query }'}
                .name
                  %a{href:'javascript:void(0);', ng-click: "clickBoundary(state, district)"}
                    [[district.name]]
                .aliases{ng-show:'district.aliases.strip().length > 0'}
                  [[district.aliases | collapse ]]
                .wards{ng-show:'query.trim().length > 0'}
                  .ward{ng-repeat:'ward in district.children | filter: { match: query }'}
                    .name
                      %a{href:'javascript:void(0);', ng-click: "clickBoundary(state, district, ward)"}
                        [[ward.name]]
                    .aliases{ng-show:'ward.aliases.strip().length > 0'}
                      [[ward.aliases | collapse ]]

      %form{name:'aliasForm'}
        .summary{ng-show:'stateBoundary'}
          %h4
            <a href='javascript:void(0);' ng-click='currentBoundary=null;'>{{ object.name }}</a>
            &raquo;

            %span{ng-show:'districtBoundary'}
              <a ng-show:'districtBoundary', href='javascript:void(0);' ng-click='clickBoundary(stateBoundary)'>[[ stateBoundary.name ]]</a>
              &raquo;

            %span{ng-show:'wardBoundary'}
              <a ng-show:'wardBoundary', href='javascript:void(0);' ng-click='clickBoundary(stateBoundary, districtBoundary)'>[[ districtBoundary.name ]]</a>

            %span{ng-show:'!districtBoundary'}
              [[stateBoundary.name]]

            %span{ng-show:'!wardBoundary'}
                [[districtBoundary.name]]

            %span{ng-show:'wardBoundary'}
              &raquo;
                [[wardBoundary.name]]

          %h5
            Enter the other names for
            %span{ng-show:'!districtBoundary'}
              [[stateBoundary.name]]

            %span{ng-show:'districtBoundary && !wardBoundary'}
              [[districtBoundary.name]]

            %span{ng-show:'wardBoundary'}
              [[wardBoundary.name]]

          %textarea.full.animate.msd-elastic{autofocus:'', ng-change:'saveButtonName="Save Changes"', name:'aliases', unique-alias:'', current-aliases:'currentAliases', ng-model:'currentAliases', current-boundary:'currentBoundary', boundaries:'boundaries'}
          .help-text
            -trans "(one per alias line)"

          .alert{ng-show:"!savingError && aliasForm.aliases.$error.uniqueAlias", style:'margin:10px 0'}
            -trans "Alias names must be unique, try again."

          .alert-danger{ng-show:"savingError", style:'margin:10px 0'}
            -trans "Your changes could not be saved. Please reload the page and try again."

          %input.btn.btn-primary.btn-tiny.submit{name:'saveButton', ng-click:'saveAliases()',  ng-show:'!savingError', ng-disabled:'aliasForm.$invalid || aliasForm.$pristine', type:'submit', value:'[[saveButtonName]]'}

      .districts{ng-show:'!districtBoundary && boundaries'}
        %hr
        .district{ng-repeat:'district in stateBoundary.children', ng-show:'district != districtBoundary'}
          %a{href:'javascript:void(0);', ng-click: "clickBoundary(stateBoundary, district)"}
            [[district.name]]
          .aliases{ng-show:'district.aliases.strip().length > 0'}
            [[district.aliases | collapse ]]

      .wards
        %hr
        .ward{ng-repeat: 'ward in districtBoundary.children'}
          %a{href:'javascript:void(0);', ng-click: "clickBoundary(stateBoundary, districtBoundary, ward)"}
            [[ward.name]]
          .aliases{ng-show:'ward.aliases.strip().length > 0'}
            [[ward.aliases | collapse ]]


    <div id="map" leaflet="" ng-show="boundaries" osm-id="'{{ object.osm_id }}'" boundaries="boundaries" root="root" selected-layer="selectedLayer" state-boundary="stateBoundary" district-boundary="districtBoundary" ward-boundary="wardBoundary" hovered-boundary="hoveredBoundary"></div>


-block extra-style
  {{ block.super }}
  %link{type:'text/css', rel:'stylesheet', href:"{{ STATIC_URL }}leaflet-0.7.2/leaflet.css", media:'all'}

  :css

    .alert-danger {
      padding: 5px;
    }

    .districts {
    }

    .wards {
    }

    .name {
      display:inline-block;
    }

    .aliases {
      display:inline-block;
      font-size: 12px;
      color: #ccc;
      margin-left:5px;
    }

    .clear-button {
      margin-top:-10px;
      padding:4px;
      line-height:16px;
    }

    .search-results {
      margin-left: 8px;
    }

    .submit {
      margin-top:10px;
    }

    .form {
      margin-top:20px;
    }

    .district {
      margin-left: 10px;
    }

    .ward {
      margin-left: 10px;
    }

    .details {
    }

    .region {
    }

    .links {
      padding:10px 0;
      border: 0px solid #ccc;
    }

    input {
      width: 200px;
      margin-bottom:10px;
    }

    .links .root {
      font-weight:bold;
      font-size:18px;
      padding:5px;
    }

    .links .state .name {
      font-size:14px;
      font-weight:500;
      padding:2px;
      margin-left:10px;
    }

    .links .state .districts {
      margin-left:20px;
    }

    textarea.full {
      height:45px;
      width:95%;
    }

    textarea.mini {
      height:13px;
      width:150px;
      font-size:12px;
      line-height:12px;
      padding:6px;
    }

    #editor {
      width:450px;
      display:inline-block;
      vertical-align:top;
    }

    #map {
      width: 400px;
      height: 400px;
      border:0px solid #ccc;
      display:inline-block;
      vertical-align:top;
      margin-left:40px;
    }

    .help-text {
      color: #999;
      font-size:10px;
      letter-spacing:0.15em;
      margin-top:-3px;
    }


    .leaflet-container {
      background: #fff;
    }

    .search {
      padding-top:15px;
    }

    tr {
      vertical-align:top;
    }


-block extra-script
  {{ block.super }}
  %script{src:"{{ STATIC_URL }}leaflet-0.7.2/leaflet.js"}
  %script{type:"text/javascript", src:"{{ STATIC_URL }}/js/elastic.js"}

  -compress js
    %script{src:"{{ STATIC_URL }}coffee/leaflet.coffee", type:'text/coffeescript'}
