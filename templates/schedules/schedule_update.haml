-extends 'smartmin/form.html'

-block form-span
-load i18n


-block extra-script
  {{ block.super }}
  %script{src:"{{ STATIC_URL }}js/schedules-ui.js?v=2"}

  :javascript
    var user_tz = "{{ user_tz }}";
    var user_tz_offset = {{ user_tz_offset }};

    $(document).ready(function() {
        var minDate = new Date();
        var minutes = minDate.getMinutes();
        if (minutes > 0) {
            minDate.setMinutes(0);
            minDate.setHours(minDate.getHours() + 1);
        }

        {% if object.next_fire and object.next_fire|timeuntil != "0 minutes" %}
          initializeDatetimePicker(minDate, new Date({{object.next_fire|date:"U"}} * 1000));
        {% else %}
          initializeDatetimePicker(minDate);
        {% endif %}
    });
    



-block fields
  -load smartmin

  %p.instructions
    Choose when you would like the message to be sent out.

  #schedule-options
    -if object.get_broadcast
      -if not object.next_fire
        <input id='stop-option' name='start' class='unchanged' type='radio' value='stop' checked>
        -trans "Leave unscheduled"
        <br/>
      -else
        <input id='stop-option' name='start' type='radio' value='stop'>
        -trans "Cancel schedule"
        <br/>

    <input id='later-option' name='start' type='radio' value='later' {% if object.next_fire %} checked {%endif%}>
    %input#start-datetime{ disabled:'true', name:'start_datetime', value:'Schedule for later'}
    %input#start-datetime-value{ hidden:'true', name:'start_datetime_value', value:'{{ object.next_fire|date:"U" }}'}

  #recurrence{class:'{% if not object.next_fire %}hide{% endif %}'}
    .repeat-period
      %p.instructions
        -render_field 'repeat_period'
    .weekly-repeat-options{class:'{% if object.repeat_period == "W" %}{% else%}hide{%endif%}'}
      .btn-group{'data-toggle':'buttons-checkbox'}
        #mon.btn{value:"M", class:'{% if "M" in days %}active{% endif %}'}
          -trans "Mon"
        #tue.btn{value:"T", class:'{% if "T" in days %}active{% endif %}'}
          -trans "Tue"
        #wed.btn{value:"W", class:'{% if "W" in days %}active{% endif %}'}
          -trans "Wed"
        #thu.btn{value:"R", class:'{% if "R" in days %}active{% endif %}'}
          -trans "Thu"
        #fri.btn{value:"F", class:'{% if "F" in days %}active{% endif %}'}
          -trans "Fri"
        #sat.btn{value:"S", class:'{% if "S" in days %}active{% endif %}'}
          -trans "Sat"
        #sun.btn{value:"U", class:'{% if "U" in days %}active{% endif %}'}
          -trans "Sun"

      %input#repeat-days-value{name:'repeat_days_of_week', type:'hidden', value:'{{days}}'}

-load humanize

-block summary
  -if object.next_fire
    -spaceless
      -if object.get_broadcast
        -trans "The next message will be sent on"
        <span class='attn next-fire'>{% pretty_datetime object.next_fire %}</span>.

    -if not object.repeat_period == 'O'
      -if object.repeat_period == 'W'
        -trans "It will repeat every"
        -with object.get_repeat_days_display|length as day_count
          -for day in object.get_repeat_days_display
            {% if forloop.last and day_count > 1 %} and {%endif%}
            %span.attn
              {{day}}{% if not forloop.last and day_count > 2%}, {%endif%}

        -trans "at around the same time."
      -elif object.repeat_period == 'M'
        -trans "It will repeat every"
        %span.attn
          month
        -trans "on the"
        {{ object.repeat_day_of_month|ordinal }}.

      -else
        -trans "It will repeat"
        <span class='attn'>{{object.get_repeat_period_display|lower}}</span>
        -trans "at around the same time."
    -else
      -trans "It will "
      <span class='attn'>
      -trans "not repeat"
      </span>.

  -else
    -trans "Not scheduled"

-block form-buttons
  #form-buttons
    %br
    -if not object.next_fire
      %input.btn.start-button{type:'submit',value:'Done'}

    -else
      %input.btn.btn-primary.start-button{type:'submit',value:'Schedule'}
