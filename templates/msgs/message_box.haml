{% extends "smartmin/list.html" %}
-load smartmin sms temba compress contacts
-load i18n humanize

-block page-top
  {% render as page_top %}
    {{block.super}}
  {% endrender %}
  -if has_messages
    {{page_top}}

-block title-icon
  %span.title-icon
    .glyph.icon-inbox

-block above-bar
  -block top-form
    %form{method:"get", role:"form"}
      .form-group
        %input.form-control.search-query{type:'text', placeholder:'{% trans "Search" %}', name:"search", value:"{{search}}"}

-block content

  #numeric-form{style:"display:none"}
    %form{role:"form"}
      .form-group
        %label
          -trans "Numeric Value:"
        %input#number{type:"text"}
    .error

  #pjax
    -block pjax
      .row
        .col-md-3.sidebox
          %div{style:"margin-bottom: 10px"}
            - if org_perms.msgs.broadcast_send
              %a.btn.btn-primary.btn-block.send-button
                -trans "Send Message"

          #sidebar-nav
            %ul.nav.nav-level-1
              %li.nav-level-header
                -trans "Messages"
              - for folder in folders
                %li{'class': '{% if request.path == folder.url %}active{% endif %}' }
                  %a{'href':'={folder.url}'}
                    ={folder.label} ({{ folder.count | intcomma }})

              -if labels
                %li.nav-level-header
                  -trans "Labels"
                - for label in labels
                  - with label.children as children
                    %li{'class': '{% if current_label.id == label.pk %}active{% endif %} {% if children %}lbl-parent{%else%}lbl-not-parent{% endif %} {% if current_label in children or current_label.id == label.pk %}expanded{%endif %}'}
                      %a{'href':'{% url "msgs.msg_filter" label.pk %}'}
                        {{ label.label }} ({{ label.count | intcomma }})
                        - if children
                          - if current_label in children or current_label.id == label.pk
                            .glyph.icon-arrow-down-2
                          -else
                            .glyph.icon-arrow-right-8

                      - if children
                        - if current_label in children or current_label.id == label.pk
                          %ul.nav.nav-level-2
                            - for sub_label in children
                              %li{'class':'{% if current_label.pk == sub_label.pk %}active{% endif %}'}
                                %a{'href':'{% url "msgs.msg_filter" sub_label.pk %}'}
                                  {{ sub_label.name }} ({{ sub_label.get_message_count }})

        -if has_messages
          .col-md-9
            -block message-list
              -block buttons
                .pull-right
                  -block buttons-right
                    -block gear-menu
                      -include "gear_links_include.haml"

                -if org_perms.msgs.msg_update
                  .list-buttons-container
                    .list-buttons
                      - if 'unlabel' in actions
                        %span.btn-group
                          %a.object-btn-unlabel{href:'#'}
                            %button.btn.btn-default{data-toggle:'tooltip', data-trigger:'hover', data-delay:"800", data-placement:'top', data-original-title:'{% trans "Unlabel" %}'}
                              .glyph.icon-box

                      - if 'archive' in actions
                        %span.btn-group
                          %a.object-btn-archive{href:'#'}
                            %button.btn.btn-default{data-toggle:'tooltip', data-trigger:'hover', data-delay:"800", data-placement:'top', data-original-title:'{% trans "Archive" %}'}
                              .glyph.icon-box

                      - if 'restore' in actions
                        %span.btn-group
                          %a.object-btn-restore{href:'#'}
                            %button.btn.btn-default{data-toggle:'tooltip', data-trigger:'hover', data-delay:"800", data-placement:'top', data-original-title:'{% trans "Unarchive" %}'}
                              .glyph.icon-download

                      - if 'delete' in actions
                        %span.btn-group
                          %a.object-btn-delete{href:'#'}
                            %button.btn.btn-default{data-toggle:'tooltip', data-trigger:'hover', data-delay:"800", data-placement:'top', data-original-title:'{% trans "Delete" %}'}
                              .glyph.icon-remove

                      - if 'resend' in actions
                        %span.btn-group
                          %a.object-btn-resend{href:'#'}
                            %button.btn.btn-default{data-toggle:'tooltip', data-trigger:'hover', data-delay:"800", data-placement:'top', data-original-title:'{% trans "Resend" %}'}
                              .glyph.icon-upload

                      - if 'label' in actions
                        %span.btn-group
                          %button.btn.btn-default.dropdown-toggle{data-toggle:"dropdown", data-trigger:'hover', data-delay:"800", data-placement:'top', data-original-title:'{% trans "Labels" %}'}
                            .glyph.icon-tag
                            %span.caret
                          %ul.dropdown-menu.label-menu{'role':'menu', 'aria-labelledby':'dlabel'}
                            - for label in labels
                              -with label.children as children
                                %li{'class':'{% if children %}dropdown-submenu{% endif %}'}
                                  %a.lbl-menu.object-btn-label{href:'#', 'tabindex':'-1', data-id:'{{label.pk}}'}
                                    .glyph.message-label.label-checkbox
                                    = label.label
                                  %ul.dropdown-menu.label-menu
                                    - for child in children
                                      %li
                                        %a.lbl-menu.object-btn-label{'href':'#', 'tabindex':'-1', data-id:'{{child.pk}}'}
                                          .glyph.message-label.label-checkbox
                                          = child.name
                            - if org_perms.msgs.label_create 
                              %li
                                %a.lbl-menu.add-label
                                  -trans "Add Label"

              %table.list-table.sms_list.object-list.table.table-condensed{style: '{% if not org_perms.msgs.msg_update %}margin-top:10px{% endif %}'}
                %tbody
                  -for object in object_list
                    %tr.sms.object-row.select-row{id: 'id-row-{{object.id}}', class:'{% cycle row1 row2 %}{% if object.created_on > msg_last_viewed %}new{% endif %}', data-object-id:'{{ object.id }}',
                                   data-sender-id:'{{object.contact.id}}', data-sender-uuid:'{{object.contact.uuid}}', data-sender-select2:'{{object.contact|short_name:user_org}}'}
                      - if org_perms.msgs.msg_update or org_perms.msgs.broadcast_send
                        %td.checkbox.sms.object-row-checkbox
                          .glyph.object-row-checkbox
                      %td.value-phone.field_phone
                        %nobr
                          {{ object.contact|short_name:user_org }}
                      %td.value-text.field_text
                        {% get_value object 'text' %}
                        .value-labels
                          %nobr
                            - for label in object.labels.all
                              -if label.label_type == 'M'
                                %span.label.label-info.lbl{ data-id: '{{label.id}}' }
                                  %a{href:"{% url 'msgs.msg_filter' label.pk%}"}
                                    ={label.name}

                      %td.value-icon.field_icon
                        {{ object|as_icon }}

                      %td.value-received.field_received
                        %nobr
                          {{ object.created_on|gmail_time }}
                    -empty
                      %tr
                        %td{colspan:3}
                          -trans "No matching messages."

              - block paginator
                -if object_list.count
                  .paginator
                    -include "smartmin/sidebar_pagination.haml"
          -else
            -include "msgs/empty_include.html"

-block post-content
  - if org_perms.msgs.broadcast_send
    -include "msgs/msg_send_modal.haml"

-block extra-script
  {{ block.super }}
  :javascript

    {% if org_perms.msgs.msg_update %}

    function postLabelChanges(smsIds, labelId, addLabel, number, onError) {
         fetchPJAXContent("", "#pjax", { postData: { objects: smsIds, label: labelId, add: addLabel, action: 'label', pjax: 'true', number:number },
         forceReload: true, onSuccess: function(data, textStatus) {

           // if there is a live modal, hide it
           var modal = $("#active-modal");
           if ((modal).is(":visible")) {
             modal.data('object').dismiss();
           }

           $("#pjax").html(data);
           recheckIds();
         }, onError: onError});
    }

    {% endif %}

    function onNumericDialogShown(modal) {
      modal = modal.ele
      // focus on the number dialog
      modal.find('.modal-body > .form #number').focus();

      modal.find('#number').keyup(function(event){
        if(event.keyCode == 13){
          $("#confirmation .ok").click();
          $("#confirmation #number").off('keyup');
        }
      });
    }

    $('.page-content').on('click', ".add-label", function() {
      lastChecked = getCheckedIds();
      var modal = new Modax('{% trans "Create Label" %}', '{% url "msgs.label_create" %}')
      modal.setListeners({
        onFormLoaded: function(){
          $("#active-modal form input#id_messages").val(lastChecked.join());
          if ($('#id_parent').find('option').length > 1) {
            select2div('#id_parent');
          } else {
            $('#id_parent').parents('.control-group').hide();
          }
        }, onCompleted: function() { refresh(function() { recheckIds(); }, true);}
      });

      modal.show();
    });

    {% if org_perms.msgs.broadcast_send %}
    if($(location).attr('hash') == '#message') {
      showCompose();
    }

    $(".page-content").on('click', ".send-button", function() {
      var smsIds = getCheckedIds();
      if (smsIds.length > 0) {
      showComposeInitialized("m=" + smsIds);
      } else {
      showCompose();
      }
    });
    {% endif %}

    $(".page-content").on('pjax:complete', function() {
      $(".btn").tooltip();
      bindRefreshBlock();
    });

    $('.select-row').live('mouseover', function(){
      url = '/contact/read/' + $(this).data('sender-uuid');

      $(this).find('td').not(':first-child').each(function(){
        $(this).attr('onClick', "document.location.href=url;");
      });
    });

    {% if org_perms.msgs.msg_export %}
    $('.page-content').on('click', ".msg-export-btn", function() {
      lastChecked = getCheckedIds();
      {% if current_label %}
      var modal = new Modax('{% trans "Export Label Messages" %}', '{% url "msgs.msg_export" %}?label={{current_label.pk}}')
      {% else %}
      var modal = new Modax('{% trans "Export Messages" %}', '{% url "msgs.msg_export" %}')
      {% endif %}
      modal.setIcon('icon-excel');
      modal.setRedirectOnSuccess(true);
      modal.show();
    });
    {% endif %}
