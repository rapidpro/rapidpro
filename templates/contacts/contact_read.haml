-extends "smartmin/read.html" 

-load smartmin sms contacts compress temba channels
-load i18n humanize

-block buttons

-block title
  -if contact.is_blocked
    .medium-help.icon-user-block{style:"float:left"}
  -else
    .medium-help.icon-user{style:"float:left"}
  %h2.header-margin
    {{contact|name_or_urn:user_org}}

  %h5.header-margin{style:"margin-bottom: 10px"}
    -if user_org.is_anon
      .contact-urn
        .glyph.icon-vcard
        {{contact.anon_identifier}}

    -for urn in contact_urns
      .contact-urn
        .{class:"glyph {{urn|urn_icon}}"}
        -if not user_org.is_anon
          -if urn.sendable
            %a.contact-urn-path{href:"javascript:showComposeInitialized(\"u={{ urn.id }}\", null, fetchRecentMessages)"}><
              {{urn|format_urn:user_org}}
          -else
            %i.contact-urn-path
              -if urn.scheme == 'mailto'
                %a{href:"{{urn}}"}
                  {{urn|format_urn:user_org}}
              -elif urn.scheme == 'twitter'
                %a{href:'http://twitter.com/{{urn.path}}'}
                  {{urn|format_urn:user_org}}
              -else
                {{urn|format_urn:user_org}}

        -else
          %span.contact-urn-path
            {{urn|format_urn:user_org}}

    -for urn in contact_unsendable_urns
      .contact-urn
        .{class:"glyph {{urn|urn_icon}}"}
        %i.contact-urn-path
          -if urn.scheme == 'mailto'
            %a{href:"{{urn}}"}
              {{urn|format_urn:user_org}}
          -elif urn.scheme == 'twitter'
            %a{href:'http://twitter.com/{{urn.path}}'}
              {{urn|format_urn:user_org}}
          -else
            {{urn|format_urn:user_org}}

  -block contact-groups
    %div.header-margin
      -for group in contact_groups
        %span.group-membership{id:"group_{{group.id}}_{{contact.id}}"}
          -if org_perms.contacts.contact_update and not group.is_dynamic
            %a.btn.btn-primary.btn-mini{href:"{% url 'contacts.contact_filter' group.id %}"}
              = group.name
              %a.btn.btn-primary.btn-mini{href:"#", onclick:'removeContactFromGroup({{group.pk}}, {{contact.pk}})'} x
          -else
            %a.btn.btn-primary.btn-mini{href:"{% url 'contacts.contact_filter' group.id %}"}
              = group.name

-block read-buttons

-block content

  -if contact_fields
    .contact-fields{class:'{% if fields %}clickable{%endif%}'}
      -for field in contact_fields
        --if field.value
          .contact-field{class:'{% if field.featured %}featured{%else%}normal{%endif%}'}
            .contact-field-label
              {{field.label|title}}
            .contact-field-value
              {{field.value}}

  -if upcoming_events
    .header
      -trans "Upcoming"

      -if upcoming_events|length > 3
        %a.pull-right.btn.btn-tiny.show-all
          Show All

    %table.activity.pending
      -for evt in upcoming_events

        %tr.item{class:"{% if evt.event_type == 'M' %}msg{%else%}non-msg{%endif%} {%if forloop.counter <= upcoming_events|length|add:-3%}hide hidden-upcoming{%endif%}"}
          %td.icon
            -if evt.event_type == 'M'
              %span.glyph.icon-bubble-right
            -elif evt.event_type == 'F'
              %span.glyph.icon-tree-2
            -else
              %span.glyph.icon-clock

          %td.details

            .activity-scheduled

              -if evt.event_type == 'M'
                //.summary
                //  Scheduled {{evt.event.campaign}} message
                .activity-body
                  {{evt.message}}



              -elif evt.event_type == 'F'
                -trans "Start"
                %a.href{ href: "{% url 'flows.flow_editor' evt.flow_id %}" }= evt.flow_name
          %td.created_on
            {{evt.scheduled}}

            .repeats
              -if evt.repeat_period == 'D'
                -trans 'repeats daily'
              -elif evt.repeat_period == 'W'
                -trans 'repeats weekly'

  .header
    -trans "Message History"
  %table.activity.history
    %tr.since
      %td{colspan:3}
        %span.loading
          -trans "One moment..."


-block post-content
  -include "msgs/msg_send_modal.haml"

  -if org_perms.contacts.contact_delete
    .deletion.hide
      .title
        -trans "Delete Contact"

      .body
        %p
          -trans "Are you sure you want to delete this contact?"
        %p
          %b
            -if contact.name
              {{contact.name}}
            -else
              {{contact|format_urn:user_org}}
          %p
            -trans "Once they are deleted, they will be gone forever. There is no way to undo this operation."

      %a#delete-form.posterize{href:'{% url "contacts.contact_delete" contact.pk %}'}

-block extra-less
  -compress css
    {% lessblock %}
      :plain

        .header {
          padding: 8px;
          font-size:14px;
          border-bottom: 1px solid #d9d9d9;
          margin-top: 10px;
          .show-all {
            margin-top:-8px;
            margin-right:-8px;
          }
        }

        table.activity {

          tr.since {
            border-bottom: none;
            td {
              text-align:center;
              border-top: 1px solid @color-bg-grey + #555;
              padding-top:15px;

              .date {
                border:0px solid red;
              }

              .btn {
                margin-top:15px;
              }
            }
          }

          tr.end-call {
            background: #ddd;
            color: #000;
            td {
              text-align:center;
              padding: 5px;
            }
          }

          width: 100%;
          margin-bottom: 20px;
          border-collapse: collapse;

          &.pending {

            color: #ccc;

            tr.non-msg {
              background: inherit;
            }


            .icon {
              .glyph.icon-bubble-right, .glyph.icon-tree-2 {
                color: #ddd;
              }
              text-align:center;
            }

            a {
              color: #ddd;
            }
          }

          tr {
            border-top: 1px solid #f3f3f3;
            border-bottom: 1px solid #f3f3f3;
            width: 100%;

          }

          tr.non-msg {
            background: #fafafa;
          }

          td {
            vertical-align:middle;
            padding: 2px 20px;

            &.icon {
              width: 30px;
              padding: 2px 0px;
              padding-left:10px;
              text-align:center;
            }

            &.details {

            }
          }

          .created_on {
            width: 160px;
            font-size:13px;
            line-height:13px;
            border: 0px solid;
            text-align:right;

            .repeats {
              font-size:90%;
            }
          }

          .icon {
            border: 0px solid;
            text-align:center;

            .glyph {
              margin-top:16px;
              font-size:14px;
              line-height:0;
              color: @flat-darkwhite;
              padding: 5px;

              &.icon-bubble-right, &.icon-bubble-check {
                color: @color-status-green;
              }

              &.icon-bubble-user {
                color: @color-primary;
              }

              &.icon-bullhorn {
                color: @color-status-green;
              }

              &.icon-bubble-notification {
                color: @color-status-failed;
              }
            }
          }

          .details {
            border: 0px solid;
            padding: 14px;

            .activity-message {

              .activity-body {
                .text {
                  display: inline-block;
                }
                .channel {
                  display:inline-block;
                  font-size:11px;
                  line-height:11px;
                  color: @flat-white;
                  a {
                    color: #ccc;

                    &:hover {
                      text-decoration:none;
                    }
                  }
                }
              }
            }

            .summary {
              font-size:11px;
              font-weight:500;
              line-height:10px;
              color: @flat-grey;
            }

            .contact-count {
              padding-left:5px;
              font-weight:normal;
            }
          }
        }


        .message-history {
          .broadcast {
            .rounded-corners();
            border: solid 1px #f3f3f3;

            padding:15px;
            margin-bottom:5px;

            .icon-megaphone {
              float:left;
              font-size:30px;
              color: @color-status-green;
            }

            .sent-to {
              margin-left:50px;
              font-size: 12px;
              font-weight: 400;
              color: #c1c1c1;
              line-height:9px;
            }
            .message-body {
              margin-left:50px;
            }
          }
        }

        .contact-urn {
          display: inline-block;
          margin-right: 10px;

          .glyph {
            margin-right: 3px;
          }
        }

        .left-recording {
          font-style: italic;
          font-size:90%;
        }

        .recording {
          width:16px;
          padding:4px;
          text-align:center;
          .stop {

            font-size:22px;
            margin-left:-7px;
            margin-top:-3px;
          }


          color:@color-links + #222;
          display:inline-block;
          margin-left:0px;
          font-size:14px;
          line-height:0px;

          &:hover {
            color: @color-links;
            cursor:pointer;
          }

          &.playing {
            color: @color-links + #222;
            &:hover {
              color: @color-links;
            }

            .stop {
              display:block;
            }

            .play {
              display:none;
            }
          }
        }


        .contact-fields {
          // background: #f1f1f1;

          font-size: 12px;
          color: @color-font-grey;
          border: 1px solid #f1f1f1;
          margin-bottom:15px;

          &.clickable:hover {
            background: #f1f1f1;
            cursor:pointer;
          }

          .show-more {
            padding: 10px;
            display:block;
          }

          .contact-field {
            padding: 2px 10px;
            width: 260px;
            display:inline-block;

            &.normal {
              display:none;
            }

            .contact-field-label {
              font-weight: normal;
              color: @color-font-black;
              font-size:12px;
              margin-right:2px;
              padding-top:5px;
              font-size:95%;

            }

            .contact-field-value {
              font-weight: bold;
              color: @color-font-grey;
              border: 0px solid green;
              padding-top:-5px;

            }

          }
        }

    {% endlessblock %}

-block extra-script
  {{ block.super }}

  :javascript

    var page = 1;
    var refreshSeconds = 30;
    var scheduledRefresh = null;

    $(document).ready(function() {

      $('.show-all').live('click', function() {
        $(this).hide();
        $('.hidden-upcoming').slideDown()
      });

      $('.time').live('mouseover', function() {
        $(this).children('.long').show();
        $(this).children('.short').hide();
      }).live('mouseleave', function() {
        $(this).children('.short').show();
        $(this).children('.long').hide();
      });
      // fetch our first chunk of history
      $.get('/contact/history/{{contact.uuid}}/?rs={{recent_seconds}}', function(data){
        $('.history tr:last').remove();
        $('.history').append(data);
      });

      // when they click to load more, fetch more history
      $('.load-more').live('click', function() {
        $(this).css('visibility', 'hidden');
        $('.since .loading').text('One moment..');

        page++
        $.get('/contact/history/{{contact.uuid}}/?rs={{recent_seconds}}&page=' + page, function(data){
          $('.history tr:last').remove();
          $('.history').append(data);
        });
      });

      // configure the number of contact fields to show
      var featuredMax = 4;
      var featuredCount = $('.featured').size()
      if (featuredCount < featuredMax) {
        $('.normal').slice(0, featuredMax-featuredCount).removeClass('normal').addClass('featured')
      }

      if ($('.normal').size() == 0) {
        $('.contact-fields').removeClass('clickable')
      }

      // wire up expanding the contact field list
      $('.contact-fields').live('click', function() {
        if ($(this).hasClass('expanded')) {
          $('.normal').hide();
          $(this).removeClass('expanded');
        } else {
          $(this).addClass('expanded');
          $('.normal').css('display', 'inline-block').show();
        }
      })

      // update messages every 30s
      scheduledReresh = setTimeout(fetchRecentMessages, refreshSeconds * 1000)
    });

    function fetchRecentMessages(){
      clearTimeout(scheduledRefresh);
      $.get('/contact/history/{{contact.uuid}}/?r=true&rs={{recent_seconds}}', function(data){
          $('.history tr.recent').remove();
          $('.history').prepend(data);
          scheduledRefresh = setTimeout(fetchRecentMessages, refreshSeconds * 1000)
      });
    }

    // plays the audio recording for a message
    function playMessage (messageId) {
      var audio = $('audio#message-' + messageId)
      var parent = audio.parent();
      var player = audio[0];

      if (!parent.hasClass('playing')) {
        audio.bind('ended', function(){
          parent.removeClass('playing');

        });

        parent.addClass('playing');
        player.currentTime = 0;
        player.play();

      } else {
        parent.removeClass('playing');
        player.pause();
      }
    }

  %script

    {% if org_perms.contacts.contact_update %}
    $(".update-contact").live('click', function(){
      var modal = new Modax('{% trans "Update Contact" %}','{% url "contacts.contact_update" object.pk %}');
      modal.setIcon('icon-user');
      modal.setRedirectOnSuccess(true);
      modal.show();
    });

    $(".update-contact-fields").live('click', function(){
      var modal = new Modax('{% trans "Custom Fields" %}','{% url "contacts.contact_update_fields" object.pk %}');
      modal.setIcon('icon-user');
      modal.setRedirectOnSuccess(true);
      modal.show();
    });
    {% endif %}

    {% if org_perms.msgs.broadcast_send %}
    $('#send').submit(function(){
      var $textarea = $('#id_text');

      if(!$textarea.val()) {
        $textarea.css({'border':'1px solid #da4f49', 'color':'#da4f49'});
        $('.failed').remove();
        $('{% trans "<p>This field is required, please fill in the message to send out</p>" %}').insertAfter("#id_send").addClass('failed');
        return false;
      } else if($textarea.val().length > 160) {
        $('.failed').remove();
        $textarea.css({'border':'1px solid #da4f49', 'color':'#da4f49'});
        $('{%trans "<p>Ensure this value has at most 160 characters (it has " %}' + $textarea.val().length + ') </p> ').insertAfter("#id_send").addClass('failed');
        return false;
      } else {
        return true;
      }
    });
    {% endif %}

    {% if org_perms.contacts.contact_update %}
    function removeContactFromGroup(groupId, contactId){
      id = '#group_' + groupId + '_' + contactId;
      $.post('{% url 'contacts.contact_read' contact.uuid %}', {contact: contactId, group: groupId}, function(groupId, contactId) {
        $(id).remove();
      });
    }
    {% endif %}

    {% if org_perms.contacts.contact_delete %}
    $(".contact-delete-button").live('click', function() {
      $(".gear-menu").removeClass("open");
      modal = new ConfirmationModal($('.deletion > .title').html(), $('.deletion > .body').html());
      modal.addClass('alert');
      modal.setListeners({onPrimary: function(){
        $('#delete-form').click();
      }}, false);
      modal.setPrimaryButton('{% trans "Delete" %}');
      modal.show();
    });
    {% endif %}

    {% if org_perms.msgs.broadcast_send %}
    $(".contact-send-button").on('click', function() {
      {% if has_sendable_urn %}
      $(".gear-menu").removeClass("open");
      showComposeInitialized("c={{object.id}}", null, fetchRecentMessages);
      {% else %}
      modal = new Modal('{% trans "Error" %}', '{% trans "This contact does not have any number which you can send to. Please edit the contact first or add a new phone." %}');
      modal.addClass('alert');
      modal.setListeners({onPrimary: function(){ modal.dismiss(); }}, false);
      modal.show();
      {% endif %}

      return false;
    });
    {% endif %}
