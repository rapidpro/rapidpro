-load i18n

:css
  .attach-option {
  }

  .attach-button {
    float:left;
    margin-right: 6px;
  }

  .attachments.active .attach-button {
  }

  .modal-body .attach-type .select2-container {
    width: 120px;
  }

  .attach-type {
    display: inline-block;
    position: relative;
    top: -3px;
    margin-right:8px;
  }

  .attach-url input {
    width: 217px;
    display: inline-block;
  }

  .attachments .icon-close {
    color: #e6e6e6;
    visibility: hidden;
    cursor: pointer;
  }

  .attachments:hover .icon-close {
    visibility: visible;
  }

  .attach-options .icon-close {
    margin-top: 3px;
  }

  .action-editor .modal-body input.url {
    width: 385px;
  }

  .quick-reply, .quick-reply:hover {
    transition: none;
    -webkit-transition: none;
  }

  label[for="new_format"] {
    display: inline-block;
  }

  .modal.api .modal-body input {
    margin-left: 0px;
  }

.modal-header.title
  %span{ng-model:"config",data-icon:"show",class:"modal-title action-name"}><
.modal-body
  %p
    -blocktrans
      When somebody arrives at this point in your flow
  %select{ng-change:"updateActionForm(config)", ng-model:"config", ng-options:"action as action.verbose_name for action in actionConfigs | filter:validActionFilter",style:"height:34px",class:"action-type",select2:""}
  <ng-form name="action_editor">
    %span{ng-if:'config.type == "reply"'}
      -include 'partials/invalid_fields.haml'
      %span{auto-complete:"",msg:"action.msg",type:"sms",data-message:"message"}
      %button{ng-click:'saveMessage(message, "reply", showAttachVariable)',class:"submit hide"}
      .media{ng-hide:'action.uploading'}
        .attachments{ng-class: '{active:showAttachOptions}', ng-show: '!action._media && !quickReplies.length'}
          .attach-button{ng-show:'!showAttachOptions'}
            .icon-attachment.add-attachment{ng-click:'showAttachOptions = !showAttachOptions; showAttachVariable=false' }

          %span.attach-options{ng-show: 'showAttachOptions && !showAttachVariable'}
            .attach-option.btn.btn-tiny{ng-file-select:'onFileSelect($files, actionset, action);', ng-click:'$event.stopPropagation();'}
              Attach File
            .attach-option.btn.btn-tiny{ng-click:'showAttachVariable = true'}
              Attach URL

            .icon.icon-close{ng-click:"showAttachOptions = false; showAttachVariable = false"}

          .attach-variable{ng-show:'showAttachVariable'}
            %span.attach-type
              %select.select2{ng-model:"action._attachType"}
                %option{value:"image"}
                  Image
                %option{value:"audio"}
                  Audio
                %option{value:"video"}
                  Video
            %span.attach-url
              %input{ng-model:"action._attachURL", name:"url", type:'text', auto-complete:"", placeholder: '@extra.attachment_url', ng-required:"showAttachVariable"}
            .icon.icon-close{ng-click:"showAttachOptions = false; showAttachVariable = false"}

        .tag-button{ng-show:'action._media', ng-click:'clickShowActionMedia(action); $event.stopPropagation();'}
          .viewer-button{ng-class:'{"icon-videocam": action._media.type == "video", "icon-photo": action._media.type=="image", "icon-arrow-right-8": action._media.type=="audio"}'}
          .summary
            [[action._media.type]] attachment
          .remove
            %a{href:'javascript:void(0);', ng-click:'removeAttachment(); $event.stopPropagation();'}
              .icon-close

        .icon-quick-reply{ng-click: 'addNewQuickReply();', ng-show: '!showAttachOptions && showQuickReplyButton && flow.flow_type=="M"'}

      .quick-reply{ng-show:"!showQuickReplyButton"}
        .modal-quick-reply-header
          .quick-reply-title
            -trans "Quick Replies"

        .modal-quick-reply{ng-repeat:"reply in quickReplies", class:""}
          .quick-reply-title
            %input{type:"text", name:"quick-reply-title", auto-complete:"", ng-model:"reply[base_language]", ng-required:"true"}

          .icon.icon-close{ng-click:"removeQuickReply($index);"}
        %a.add-reply{href:"javascript:;", ng-click:"addNewQuickReply()", ng-hide:"quickReplies.length == 11"}
          -trans "Add reply"

    %span{ng-if:'config.type == "end_ussd"'}
      %span{auto-complete:"",msg:"action.msg",type:"ussd",data-message:"message"}
      %button{ng-click:'saveMessage(message, "end_ussd")',class:"submit hide"}

    %span{ng-if:'config.type == "say"'}
      -include 'partials/invalid_fields.haml'     
      %span{show-counter:"false",auto-complete:"",msg:"action.msg",data-message:"message"}
      %button{ng-click:'saveMessage(message, "say")',class:"submit hide"}

    %span{ng-if:'config.type == "play"'}
      %h4
        Previous Recording
      -include 'partials/invalid_fields.haml'
      %input{ng-model:"action.url", name:"value", auto-complete:"", flow:"[[flowId]]", ng-required:"true", type:"text", placeholder:'@flow.recording'}
      .help-text
        Enter a variable that contains a recording the contact has previously recorded. For example, @flow.voicemail or @contact.short_bio.
      %button{ng-click:"savePlay()",class:"submit hide"}


    %span{ng-if:'config.type == "send"'}
      %input{ng-model:"omnibox", name:"omnibox", contacts:"action.contacts", variables:"action.variables", required:"", omnibox:'{"types":"cg", "completions":true}', groups:"action.groups", type:"hidden"}
      -include 'partials/invalid_fields.haml'
      %span{msg:"action.msg", data-message:"message"}
      %button{ng-click:"saveSend(action_editor.omnibox.selected, message)",class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "channel"'}
      %p{class:"description"}
        -blocktrans
          Choose the preferred channel for this contact.
      %select{ng-model:"action.channel",style:"height:34px",name:"channel",ng-options:"channel.uuid as channel.name for channel in channels", required:"", class:"channel", select2:""}
      %button{ng-click:"saveChannel(action_editor.channel)", class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "add_label"'}
      %p{class:"description"}
        -blocktrans
          Choose one or more labels below.
      %input{ng-model:"action.labels", name:"msg_labels", select-label:"", required:"", type:"hidden"}
      %button{ng-click:"saveLabels(action_editor.msg_labels.selected)", class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "add_group" || config.type == "del_group"'}
      %p{class:"description", ng-if:'!checked'}
        -blocktrans
          Choose one or more groups below.
        %input{ng-model:"omnibox",name:"omnibox",required:"",omnibox:'{"types":"s", "arbitraryAdd":true, "completions":true, "allowExtra": true}',groups:"action.groups",type:"hidden"}
      %p{class:"description", ng-show:'config.type == "del_group"'}
        -blocktrans
          %input{id: "all_groups", name:"all_groups", type:"checkbox", ng-model:"checked", ng-checked:"checked", ng-init:'checked=action.groups.length == 0 && config.type == "del_group"'}
          %label{for:"all_groups"} Remove from All Groups
      %button{ng-click:"saveGroups(config.type, action_editor.omnibox.selected, checked)", class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "lang"'}
      %p{class:"description"}
        -blocktrans
          Set the preferred language for the contact.

      %select{ng-model:"action.lang",style:"height:34px",name:"lang",ng-options:"lang.iso_code as lang.name for lang in languages", required:"", class:"language", select2:""}
      %button{ng-click:"saveLanguage(action_editor.lang)",class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "save"'}
      .label
        -trans "Save to field"
      %input{ng-model:"field",name:"field",text:"[[action.label]]", select-static:"[[updateContactFields]]",required:"",key:"[[action.field]]",type:"hidden"}
      .help-text
        -blocktrans
          Select an existing field, or type a name to create a new field.
      -include 'partials/invalid_fields.haml'            
      .label
        -trans "Value"
      %input{ng-model:"action.value",name:"value",auto-complete:"",flow:"[[flowId]]",ng-required:"true",type:"text"}
      .help-text
        -blocktrans
          The value to store can be any text you like. You can also reference other
          values that have been collected up to this point by typing @flow.
      %button{ng-click:"saveUpdateContact(action_editor.field.selected, action.value)",class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "email"'}
      .label
        -trans "To"
      %input{ng-model:"action.emails",select-email:"",name:"to",placeholder:"Enter email addresses",required:"",type:"hidden"}
      -include 'partials/invalid_fields.haml'        
      .label
        -trans "Subject"
      %input{ng-model:"action.subject",name:"subject",auto-complete:"",flow:"[[flowId]]",ng-required:"true",type:"text"}
      .label
        -trans "Message"
      %textarea{ng-model:"action.msg",auto-complete:"",flow:"[[flowId]]",name:"body",ng-required:"true"}
      %button{ng-click:"saveEmail(action_editor.to.selected)",class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "trigger-flow"'}
      %p{class:"description"}
        -blocktrans
          This action starts the contacts you specify down a flow.
          The flow variables collected up to this point will be available in @parent.
      %input{ng-model:"omnibox", name:"omnibox", required:"", variables:"action.variables", omnibox:'{"types":"gc", "completions":true}', contacts:"action.contacts", groups:"action.groups", type:"hidden"}
      %input{ng-model:"action.flow",search:"true",init-text:"[[action.flow.name]]",name:"flow",placeholder:"Select the flow to start",required:"",init-id:"[[action.flow.uuid]]",select-server:"/flow/?_format=select2",type:"hidden"}
      %button{ng-click:"saveStartFlow(action_editor.flow.selected, action_editor.omnibox.selected)",class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "flow"'}
      %p{class:"description"}
        -blocktrans
          This action redirects contacts to a new flow. When they start that flow, they will exit this one.
      %input{ng-model:"action.flow",search:"true",init-text:"[[action.flow.name]]",name:"flow",placeholder:"Select the flow to start",required:"",init-id:"[[action.flow.uuid]]",select-server:"/flow/?_format=select2",type:"hidden"}
      %button{ng-click:"saveStartFlow(action_editor.flow.selected)",class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "api"'}
      %p{class:"description"}
        -blocktrans
          Using a Webhook you can fetch data from an external
          database and use it in this flow.
          Enter the URL to call out to at this point in the flow.
      -include 'partials/invalid_fields.haml'            
      %select{ng-model:"action.action",ng-options:"method for method in methods",style:"height:34px;width:95px",class:"method",select2:""}
      %input{ng-model:"action.webhook",name:"url",placeholder:"http://yourwebsite.com/endpoint",auto-complete:"",flow:"[[flowId]]",ng-required:"true",type:"url",class:"url"}

      .help-text
        %a.additional-options{href:"javascript:;",ng-click:"actionWebhookAdditionalOptions()",ng-show:"!formData.isActionWebhookAdditionalOptionsVisible"}
          -trans "Additional options"

      .webhook-headers{ng-show:"formData.isActionWebhookAdditionalOptionsVisible"}
        .modal-webhook-header-pair
          .modal-webhook-header.modal-webhook-header-name
            .message
              .help-text
                -trans "Header Name"
          .modal-webhook-header.modal-webhook-header-value
            .message
              .help-text
                -trans "Header Value"
        .modal-webhook-header-pair{ng-repeat:"header in action.webhook_headers"}
          .modal-webhook-header.modal-webhook-header-name
            %input{type:"text",name:"webhook-name",ng-model:"header.name"}
          .modal-webhook-header.modal-webhook-header-value
            %input{type:"text",name:"webhook-value",ng-model:"header.value"}
          .modal-webhook-header.modal-webhook-header-remove
            .icon.icon-close{ng-click:"removeActionWebhookHeader($index)"}

        .help-text
          %a.add-header{href:"javascript:;",ng-click:"addNewActionWebhookHeader()"}
            -trans "Add header"

      .div
        .help-text{ng-show:'action.action == "POST"'}
          -blocktrans
            We'll include the message text along with data specified in the
            %a{href:"/webhooks/webhook/#flow", target:"_new"}<
              Webhook Flow Event API
            . This step will be identified as [[actionset.uuid]]

        %p
        %p{class:"description response"}
          -blocktrans
            If your server responds with JSON, each property will be added
            to the flow.

        .example
          .code
            &#x7B;
            %br
            &nbsp;&nbsp;product: "Solar charging kit",
            %br
            &nbsp;&nbsp;stock_level: 32
            %br
            &#x7D;

        .help-text
          -blocktrans
            In this example @extra.product and @extra.stock_level would be
            added for all future steps

      %button{ng-click:"saveWebhook(action.action, action.webhook)",class:"submit hide"}
        -trans "Ok"
    </ng-form>
.modal-footer

  .send-all{ng-show:'config.type == "reply"', style:'float:left'}

    %label
      %input{type:'checkbox', ng-model:'action.send_all'}

      %span
        -trans "Send to all contact addresses"

  %button{ng-click:"cancel()",class:"btn btn-secondary",tabindex:"2"}
    -trans "Cancel"
  %button{ng-disabled:"action_editor.$invalid",ng-click:"ok()",class:"btn btn-primary",ng-model:"message"}
    -trans "Ok"
