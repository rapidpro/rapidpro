-load i18n


.modal-header.title
  %span{ng-model:"config",data-icon:"show",class:"modal-title action-name"}><
.modal-body
  %p
    -blocktrans
      When somebody arrives at this point in your flow
  %select{ng-change:"updateActionForm(config)", ng-model:"config", ng-options:"action as action.verbose_name for action in actionConfigs | filter:validActionFilter",style:"height:34px",class:"action-type",select2:""}
  <ng-form name="action_editor">
    %span{ng-if:'config.type == "reply"'}><
      %span{auto-complete:"",sms:"action.msg",data-message:"message"}><
      %button{ng-click:'saveMessage(message, "reply")',class:"submit hide"}
    %span{ng-if:'config.type == "say"'}><
      %span{show-counter:"false",auto-complete:"",sms:"action.msg",data-message:"message"}><
      %button{ng-click:'saveMessage(message, "say")',class:"submit hide"}

    %span{ng-if:'config.type == "play"'}><

      %h4
        Previous Recording
      %input{ng-model:"action.url", name:"value", auto-complete:"", flow:"[[flowId]]", ng-required:"true", type:"text", placeholder:'@flow.recording'}
      .help-text
        Enter a variable that contains a recording the contact has previously recording. For example, @flow.voicemail or @contact.short_bio.

      %button{ng-click:"savePlay()",class:"submit hide"}


    %span{ng-if:'config.type == "send"'}><
      %input{ng-model:"omnibox", name:"omnibox", contacts:"action.contacts", variables:"action.variables", required:"", omnibox:'{"types":"gc", "completions":true}', groups:"action.groups", type:"hidden"}
      %span{sms:"action.msg",data-message:"message"}><
      %button{ng-click:"saveSend(action_editor.omnibox.selected, message)",class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "add_label"'}
      %p
        -blocktrans
          Choose one or more labels below.
      %input{ng-model:"action.labels", name:"msg_labels", select-label:"", required:"", type:"hidden"}
      %button{ng-click:"saveLabels(action_editor.msg_labels.selected)", class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "add_group" || config.type == "del_group"'}
      %p{class:"description"}
        -blocktrans
          Choose one or more groups below.
      %input{ng-model:"omnibox",name:"omnibox",required:"",omnibox:'{"types":"g", "arbitraryAdd":true, "completions":true, "allowExtra": true}',groups:"action.groups",type:"hidden"}
      %button{ng-click:"saveGroups(config.type, action_editor.omnibox.selected)",class:"submit hide"}
        -trans "Ok"
    %div{ng-if:'config.type == "lang"'}
      %p{class:"description"}
        -blocktrans
          Set the preferred language for the contact.

      %select{ng-model:"action.lang",style:"height:34px",name:"lang",ng-options:"lang.iso_code as lang.name for lang in languages", required:"", class:"language", select2:""}
      %button{ng-click:"saveLanguage(action_editor.lang)",class:"submit hide"}
        -trans "Ok"

    // Update Contact
    %div{ng-if:'config.type == "save"'}
      .label
        -trans "Save to field"
      %input{ng-model:"field",name:"field",text:"[[action.label]]",select-static:"[[contactFields]]",required:"",key:"[[action.field]]",type:"hidden"}
      .help-text
        -blocktrans
          Select an existing field, or type a name to create a new field.
      .label
        -trans "Value"
      %input{ng-model:"action.value",name:"value",auto-complete:"",flow:"[[flowId]]",ng-required:"true",type:"text"}
      .help-text
        -blocktrans
          The value to store can be any text you like. You can also reference other
          values that have been collected up to this point by typing @flow.
      %button{ng-click:"saveUpdateContact(action_editor.field.selected, action.value)",class:"submit hide"}
        -trans "Ok"

    %div{ng-if:'config.type == "email"'}
      .label
        -trans "To"
      %input{ng-model:"action.emails",select-email:"",name:"to",placeholder:"Enter email addresses",required:"",type:"hidden"}
      .label
        -trans "Subject"
      %input{ng-model:"action.subject",name:"subject",auto-complete:"",flow:"[[flowId]]",ng-required:"true",type:"text"}
      .label
        -trans "Message"
      %textarea{ng-model:"action.msg",auto-complete:"",flow:"[[flowId]]",name:"body",ng-required:"true"}
      %button{ng-click:"saveEmail(action_editor.to.selected)",class:"submit hide"}
        -trans "Ok"
    %div{ng-if:'config.type == "trigger-flow"'}
      %p{class:"description"}
        -blocktrans
          This action starts the contacts you specify down a flow.
          The flow variables collected up to this point will be available in @extra.
      %input{ng-model:"omnibox", name:"omnibox", required:"", variables:"action.variables", omnibox:'{"types":"gc", "completions":true}', groups:"action.groups", type:"hidden"}
      %input{ng-model:"action.flow",search:"true",init-text:"[[action.name]]",name:"flow",placeholder:"Select the flow to start",required:"",init-id:"[[action.id]]",select-server:"/flow/?_format=select2",type:"hidden"}
      %button{ng-click:"saveStartFlow(action_editor.flow.selected, action_editor.omnibox.selected)",class:"submit hide"}
        -trans "Ok"
    %div{ng-if:'config.type == "flow"'}
      %p{class:"description"}
        -blocktrans
          This action redirects contacts to a new flow. When they
          are done with that flow they can continue the current one.
      %input{ng-model:"action.flow",search:"true",init-text:"[[action.name]]",name:"flow",placeholder:"Select the flow to start",required:"",init-id:"[[action.id]]",select-server:"/flow/?_format=select2",type:"hidden"}
      %button{ng-click:"saveStartFlow(action_editor.flow.selected)",class:"submit hide"}
        -trans "Ok"
    %div{ng-if:'config.type == "api"'}
      %p{class:"description"}
        -blocktrans
          Using a Webhook you can fetch data from an external
          database and use it in this flow.
          Enter the URL to call out to at this point in the flow.

      %select{ng-model:"action.action",ng-options:"method for method in methods",style:"height:34px;width:95px",class:"method",select2:""}
      %input{ng-model:"action.webhook",name:"url",placeholder:"http://yourwebsite.com/endpoint",auto-complete:"",flow:"[[flowId]]",ng-required:"true",type:"url",class:"url"}
      .help-text
        -blocktrans
          We'll include the message text along with data specified
          in the
          %a{href:"/api/v1/webhook/#flow"}<
            Webhook Flow Event API
          .

      .help-text
        -blocktrans
          This step will be identified as [[action.uuid]]

      %p{class:"description response"}
        -blocktrans
          If your server responds with JSON, each property will be
          added to the flow.

      .code
        &#x7B;
        %br
        &nbsp;&nbsp;product: "Solar charging kit",
        %br
        &nbsp;&nbsp;stock_level: 32
        %br
        &#x7D;

      .help-text
        -blocktrans
          In this example @extra.product and @extra.stock_level
          would be added for all future steps.

      %button{ng-click:"saveWebhook(action.action, action.webhook)",class:"submit hide"}
        -trans "Ok"
    </ng-form>
.modal-footer
  %button{ng-click:"cancel()",class:"btn btn-secondary",tabindex:"2"}
    -trans "Cancel"
  %button{ng-disabled:"action_editor.$invalid",ng-click:"ok()",class:"btn btn-primary",ng-model:"message"}
    -trans "Ok"
