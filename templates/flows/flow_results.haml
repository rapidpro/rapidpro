-extends "smartmin/read.html"
-load smartmin sms compress temba contacts

-block page-top
  .row
    .span9
      .medium-help.icon-tree.float-left
      -if flow.name|length > 40
        %h3.font_normalize.header-margin
          {{ flow.name }}

      -else
        %h2.font_normalize.header-margin
          {{ flow.name }}

    .span3
      .pull-right
        %a.btn.btn-success{ href: "{% url 'flows.flow_export_results' %}?ids={{ object.id }}" } Download Results
        %a.btn{ href: "{% url 'flows.flow_editor' object.pk %}" } View

-block buttons

-block fields

  %table#data.dataTable
    %thead
      %tr
        %th
          Date
        %th
          Phone
        %th
          Name
        %th
          Runs

        -for col in counts
          %th
            {{ col.ruleset.label }}

        //%th.date
        //  Date
    %tbody

  #table-gutter

    %h5.table-options
      Table Options

    #column-options.hide
      #contact-columns
        .column-header
          Contact Data
        .option
          %div{class:'col_0 view_toggle', data-col:'0'}
            .glyph.notif-checkbox
          .col
            Date
        .option
          %div{class:'col_1 view_toggle', data-col:'1'}
            .glyph.notif-checkbox
          .col
            Phone
        .option
          %div{class:'col_2 view_toggle', data-col:'2'}
            .glyph.notif-checkbox
          .col
            Name
        .option
          %div{class:'col_3 view_toggle', data-col:'3'}
            .glyph.notif-checkbox
          .col
            Runs


-block extra-script
  {{ block.super }}

  <script type="text/javascript" charset="utf8" src="{{ STATIC_URL }}js/jquery.dataTables.min.js"></script>
  <script src="{{ STATIC_URL }}js/highcharts.js?v=3.0"></script>
  <script src="{{ STATIC_URL }}js/highcharts-theme.js?v=2"></script>

  :javascript
    $(function() {
      jQuery.fn.dataTableExt.oApi.fnSetFilteringDelay = function ( oSettings, iDelay ) {
        var _that = this;

        if ( iDelay === undefined ) {
            iDelay = 1250;
        }

        this.each( function ( i ) {
            $.fn.dataTableExt.iApiIndex = i;
            var
                $this = this,
                oTimerId = null,
                sPreviousSearch = null,
                anControl = $( 'input', _that.fnSettings().aanFeatures.f );

                anControl.unbind( 'keyup' ).bind( 'keyup', function() {
                var $$this = $this;

                if (sPreviousSearch === null || sPreviousSearch != anControl.val()) {
                    window.clearTimeout(oTimerId);
                    sPreviousSearch = anControl.val();
                    oTimerId = window.setTimeout(function() {
                        $.fn.dataTableExt.iApiIndex = i;
                        _that.fnFilter( anControl.val() );
                    }, iDelay);
                }
            });

            return this;
        } );
        return this;
      };

      var flow_col_count = {{counts|length}};
      var length = flow_col_count + 4;
      var cols = []
      var step_cols = []
      var hidden_cols = []
      var visible_cols = []

      var col_ids = "{% for col in counts %}{{col.ruleset.uuid}},{%endfor%}";
      for (var idx = 0; idx<length; idx++) {
        if (idx > 0) {
          cols.push(idx)
        }

        if (idx > 3) {
          step_cols.push(idx);
        }

        if ((flow_col_count > 0 && (idx == 2 || idx == 3)) ||idx > 8) {
          hidden_cols.push(idx);
        } else {
          visible_cols.push(idx);
        }
      }

      for (var col in visible_cols) {
        $('.col_' + visible_cols[col]).addClass('checked');
      }

      $("#footer").hide();

      var table = $('#data').dataTable({
        "bProcessing": true,
        "bServerSide": true,
        "sAjaxSource": "?json=true&cols=" + col_ids,
        "sScrollX": "100%",
        "bLengthChange": false,
        "iScrollLoadGap": 10,
        "iDisplayLength": 25,
        "sScrollY": "400px",
        "bScrollInfinite": true,
        "bScrollCollapse": true,
        "aoColumnDefs": [
            {
                // `data` refers to the data for the cell (defined by `mData`, which
                // defaults to the column being worked with, in this case is the first
                // Using `row[0]` is equivalent.
                "mRender": function ( data, type, row ) {

                    if (data.contact) {
                      return $('<a/>', { href:'?c=' + data.contact, text:data.category})[0].outerHTML;
                    }

                    if (!data.category) {
                      data.category = '-';
                    }

                    if (data.category == 'All Responses') {
                      data.category = data.text;
                    }

                    if (data.category != null && data.category.length > 18) {
                      data.category = data.category.substring(0, 15) + "..."
                    }

                    if (!data.text) {
                      data.text = '';
                    }

                    return $('<div/>', { text:data.category, title:data.text })[0].outerHTML;
                },
                "aTargets": cols
            },
            {
                "bSortable": false,
                "aTargets": step_cols
            },
            {
                "bVisible": false,
                "aTargets": hidden_cols
            },
            {
                "sWidth": "10px",
                "aTargets": [ 3 ]
            }
        ]
      });

      $('.view_toggle').on('click', function() {
        var isChecked = $(this).hasClass('checked');
        var col = $(this).data('col');
        if (isChecked) {
          $(this).removeClass('checked');
          table.fnSetColumnVis(col, false, false);
        } else {
          $(this).addClass('checked');
          table.fnSetColumnVis(col, true, false);
        }
        table.fnAdjustColumnSizing(false);

      })

      // remove the search label
      $('.dataTables_filter label').replaceWith($('.dataTables_filter input'));
      $('.dataTables_filter input').attr('placeholder', 'Search for name or number');

      var charts = $('.inline-chart').length
      if (charts == 0) {
        $('#top-charts').hide();
      }

      if (charts > 3) {
        $('#more-link').show();
        $('#more-link').on('click', function() {
          if ($('#top-charts').css('height') == '240px') {
            $('#top-charts').css('height', '100%');
            $(this).text('Less Charts');
          } else {
            $('#top-charts').css('height', '240px');
            $(this).text('More Charts');
          }

          $(this).blur();
        });
      }

    });

    $('#table-gutter').on('click', function() {
      $('#column-options:hidden').slideDown();
      $('.table-options').hide();
    });



-block extra-less
  <link rel="stylesheet" type="text/css" href="{{STATIC_URL}}css/datatables/jquery.dataTables.css">

  -compress css inline
    {% lessblock %}
      :plain

        #top-charts {
          height: 240px;
          overflow-y: hidden;
        }

        #more-link {
          position:absolute;
          margin-top:15px;
          float:left;
          display:none;
          z-index:1500;
        }

        .dataTables_processing {
          z-index: 1000;
        }

        .dataTables_filter {
          margin-top:10px;
          input {
            margin-bottom:20px;
            width: 200px;
          }
        }

        .table-options {
          padding: 10px 0;
          cursor: pointer;
        }

        #column-options {
          padding: 20px 0px;
        }

        .dataTables_scroll {
          margin-bottom:20px;
          border-bottom: 1px solid #666;
        }

        @table-color: #DDEBFC;

        table.dataTable  {

          tr.odd {
            background: @table-color;
            td.sorting_1 {
              background: @table-color - #111
            }
          }

          tr.even {
            background: #fff;
            td.sorting_1 {
              background: @table-color + #070707
            }
          }
        }

        #table-gutter {
          margin-top:60px;
          padding-left: 20px;
          padding-right: 20px;
          background: #f9f9f9;
        }

        .inline-chart {
          margin-top:10px;
          display:inline-block;
          width:380px;
          border: 0px solid @flat-mutedblue;
          .render {
            height:200px;
            width:350px;
          }
          .name {
            width: 350px;
            text-align:center;
            color: @flat-grey;
          }
        }

    {% endlessblock %}

-block extra-style
  {{ block.super }}

  :css
    .column-header {
      background: #e6e6e6;
      color: #999;
      padding:5px;
    }

    #contact-columns {
      display: inline-block;
      border:1px solid #d6d6d6;
      background: #fff;
    }


    .option .view_toggle {
      display: inline-block;
    }

    .option .view_toggle > .glyph {
      margin: 0px;
    }

    .col {
      display: inline-block;
    }

    .option {
      display: inline-block;
      padding: 10px;
    }


    #flow-columns {
      display: inline-block;
      border:1px solid #d6d6d6;
      margin-top:20px;
      background: #fff;
   }


    table {
      width: 100%;
    }


    td {
      text-align: center;
      padding: 5px;
      min-width: 150px;
    }

    td.step {
      cursor: pointer;
    }

    td.name {
    }

    td.step.text {
    }

    th.date {
      min-width: 180px;
    }

    th {
      padding:10px;
      font-size:12px;
    }

    .medium-help.icon-tree {
      font-size: 45px;
      height: 45px;
      margin-top: -5px;
    }

    .glyph.icon-users {
      margin-top: -2px;
    }

    .header-margin {
      margin-left: 70px;
    }

    .result-header {
      background: #eee;
      padding: 5px;
      margin-bottom: 5px;
    }

    .result .seen {
      float: right;
    }

    .result .values {
      padding: 5px;
    }

    .values .empty {
      font-style: italic;
    }

    .values .name {
      float: left;
      font-weight: normal;
      width: 150px;
      text-align: right;
    }

    .values .category {
      float: left;
      width: 100px;
      margin-left: 10px;
    }

    .values .msg {
      float: left;
      margin-left: 10px;
      font-family: monospace;
    }

    .values .field {
      clear: both;
    }

    .result {
      margin-top: 10px;
      margin-bottom: 5px;
      padding-bottom: 3px;
      border: 1px solid #eee;
    }

    #message {
      border-top: 1px solid #ccc;
      border-bottom: 1px solid #ccc;
      padding: 15px 0px 25px 30px;
      margin: 15px 0px 0px 0px;
      color: #999999;
      font-size: 16px;
    }

    #message .glyph {
      font-size: 35px;
    }

    #message p {
      margin-left: 45px;
      margin-bottom: 0px;
      margin-top: -12px;
    }

    #gear-container {
      float:right;
    }

    .formax .form-horizontal .control-label {
      width: 300px;
    }

    .contact-name a, .contact-name a:hover {
      text-decoration: none;
    }

    .run-remove {
      float: right;
      width: 25px;
      height: 1px;
    }

    .run-remove a {
      display: none;
    }

    .result:hover .run-remove {
      display: block;
    }

    .run-remove .glyph {
      font-size: 14px;
    }

    .result:hover .run-remove a {
      color: #666;
      display: inline-block;
      margin-left: 5px;
    }

    .result:hover .run-remove a:hover {
      color: #333;
      text-decoration: none;
    }

    ul.formax {
      border-bottom: 1px solid #eee;
    }

    #id-broadcast .formax-summary:hover {
      color: #999999;
      cursor: default;
    }

    #id-broadcast {
      padding-top: 5px;
      padding-bottom: 3px;
      margin-top: 5px;
    }

    .ruleset-title {
      font-size: 32px;
      margin-top: 10px;
      line-height: 110%;
      font-weight: 100;
      border-bottom: 1px solid #eee;
      color: #666;
    }


