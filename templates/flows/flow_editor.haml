-extends "smartmin/base.html"
-load compress temba i18n

-block page-title
  {{ object.name }}

-block extra-style
  %link(rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto+Mono:300|Roboto:300,400,500")

  -for css in styles
    %link(rel="stylesheet" type="text/css" href="{{css}}")

  :css
    body {
      line-height: inherit;
    }

    h2 .icon-phone {
      width: 40px;
    }

    h2 .icon-mobile {
      width: 40px;
    }

    #rp-flow-editor #simulator {
      top: 20px;
    }

    #header *, #top-menu *, .org-header * {
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -khtml-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
      z-index: 0;
    }

    .ReactModalPortal {
      --curvature: 4px;
      --curvature-widget: 4px;
    }

    #rp-flow-editor, .case_list_case {
      --curvature: 4px;
      --curvature-widget: 4px; 
    }

    #rp-flow-editor input[type=text] {
      height: inherit !important;
      line-height: inherit;
    }

    #rp-flow-editor p {
      display: block;
      margin-block-start: 1em;
      margin-block-end: 1em;
      margin-inline-start: 0px;
      margin-inline-end: 0px;
    }

    .page-wrap:after {
      height: 0px;
    }

    #rp-flow-editor input {
      font-family: 'Roboto', sans-serif;
      font-size: 14px !important;
      font-weight: 300 !important;
    }

    #rp-flow-editor input:focus {
      box-shadow: none;
      outline: none;
      border: none;
    }

    #header {
      margin: 0;
    }

    #menu {
      line-height: 20px;
    }

    #toolbar h2 {
      margin-top: -5px;
    }

    .org-header {
      z-index: 1000 !important;
      line-height: 20px;
    }

    #content-menu {
      z-index: 20;
    }

    #toolbar {
      visibility: visible;
      position: relative;
      padding: 18px 30px;
    }

    #toolbar h2 {
      margin-bottom: 0;
    }

    #pending {
      position: relative;
      right: 0;
      width: 40%;
      height: 36px;
      margin: 0 auto;
      text-align: center;
    }

    #grid {
      overflow: auto;
      z-index: 5;
    }

    #shadow {
      box-shadow: inset 0 7px 9px -10px rgba(0,0,0,0.4);
      z-index: 10;
    }


    #preview {
      margin-bottom: 14px;
      margin-left: -14px;
    }

    #rp-flow-editor {
      visibility: visible;
      width: 100%;
    }

    #rp-flow-editor h1 {
      font-weight: 300;
      font-family: 'Roboto'
    }

    #rp-flow-editor > div {
      opacity: 0;
      transition: opacity 150ms linear;
    }

    temba-loading {
      margin-left: 30px;
      padding-top: 25px;
      display: block;
    }

    .page-wrap {
      min-height: inherit;
      padding-bottom: inherit;
      margin-bottom: inherit;
    }

    .footer {
      display: none;
    }

    label, input, button, select, textarea {
      font-size: inherit;
      font-weight: inherit;
      line-height: inherit;
      margin-bottom: 0;
    }

-block extra-script
  {{ block.super }}

  -for script in scripts
    %script(type="text/javascript" src="{{script}}")

  :javascript
    var base = '/flow/assets/{{object.org.id}}/' + new Date().getTime() + '/';
    var api = '/api/v2/';
    var flowType = '{{ object.engine_type }}';

    window.addEventListener("DOMContentLoaded", function() {
      var confirmation = document.getElementById("confirm-language");
      confirmation.addEventListener("temba-button-clicked", function(event){
        var code = confirmation.dataset.code;
        if(!event.detail.button.secondary) {
          posterize('{% url "flows.flow_change_language" object.id %}?language=' + code);
        }
        confirmation.open = false;
      });
    });

    function handleEditorLoaded() {
      $('.editor-loader').hide();
      $('#rp-flow-editor > div').css('opacity', '1');
    }

    function handleActivityClicked(nodeUUID, count) {
      var endpoint = '{% url "msgs.broadcast_send" %}';
      var modal = document.querySelector("#send-message-modal");
      modal.endpoint = endpoint + "?step_node=" + nodeUUID + "&count=" + count;
      modal.open = true;
    }

    function handleChangeLanguage(code, name) {

      var confirmation = document.getElementById("confirm-language");
      confirmation.classList.remove("hide");
      confirmation.dataset.code = code;
      
      var body = confirmation.querySelector('.body');
      body.innerHTML = body.innerHTML.replace(/%LANG%/g, name);
      confirmation.open = true;      
    }

    var config = {
      flow: '{{object.uuid}}',
      flowType: flowType,
      localStorage: true,
      onLoad: handleEditorLoaded,
      onActivityClicked: handleActivityClicked,
      onChangeLanguage: handleChangeLanguage,
      mutable: {{mutable|lower}},
      filters: {{feature_filters|to_json}},
      brand: '{{brand.name|escapejs}}',

      help: {
        legacy_extra: 'https://help.nyaruka.com/',
        missing_dependency: 'https://help.nyaruka.com/en/article/fixing-missing-dependencies-1toe127/',
        invalid_regex: 'https://help.nyaruka.com/en/article/invalid-regular-expressions-814k8d/'
      },

      endpoints: {

        groups: api + 'groups.json',
        fields: api + 'fields.json',
        labels: api + 'labels.json',
        channels: api + 'channels.json',
        classifiers: api + 'classifiers.json',
        ticketers: api + 'ticketers.json',
        resthooks: api + 'resthooks.json',
        templates: api + 'templates.json',
        flows: api + 'flows.json?archived=false',
        globals: api + 'globals.json',
        users: api + 'users.json',
        topics: api + 'topics.json',
        editor: '/flow/editor',

        // TODO: migrate to API?
        revisions: '/flow/revisions/{{object.uuid}}/',
        recents: '/flow/recent_contacts/{{object.uuid}}/',
        attachments: '{% url "msgs.media_upload" %}',
        languages: base + 'language',
        environment: base + 'environment',
        activity: '/flow/activity/{{object.uuid}}/',
        recipients: '/contact/omnibox?v=2&types=gc',
        contacts: '/contact/omnibox?v=2&types=c',
        contact: '/contact/read/',

        {% if can_simulate %}
        simulateStart: '/flow/simulate/{{object.id}}/',
        simulateResume: '/flow/simulate/{{object.id}}/'
        {% endif %}
      }
    };

    // wait for our component to load, then show the editor
    if (window.showFlowEditor) {
      window.showFlowEditor(document.getElementById("rp-flow-editor"), config);
    } else {
      document.addEventListener("temba-floweditor-loaded", function(){
        window.showFlowEditor(document.getElementById("rp-flow-editor"), config);
      });
    }

-block page-container

  %temba-modax#send-message-modal{ header:"Send Message" }

  .top-bar.pb-2
    .flex.flex-col.pt-4
      .flex.px-6.pb-2
        .title.flex-grow
          .flex.page-title
            -if flow.flow_type == 'V'
              .icon-phone.mt-2.mr-6
            -elif flow.flow_type == 'S'
              .icon-mobile.mt-2.mr-6
            .ml-0
              {{title}}
        .menu
          -include "gear_links_include.haml"

      -if is_starting
        .p-3.bg-gray-100.w-full.text-center
          -blocktrans trimmed
            This flow is in the process of being sent, this message will disappear once all contacts have been added to the flow.

  %temba-dialog.hide#confirm-language(header='{{_("Change Language")|escapejs}}' primaryButtonName='{{_("Update")|escapejs}}')
    .p-6.body
      -blocktrans trimmed with language="%LANG%"
        This will change the default language of the flow to <b>{{ language }}</b>. This means that by default the
        flow will be appear in that language and can be translated into other languages. Also if a contact is
        in this flow and no translation exists for their language or the default language of the workspace,
        communication with that contact will default to <b>{{ language }}</b>.

  #shadow.pb-5.-mb-5
  #grid.h-full
    <temba-loading class="editor-loader" units="10" size="8"></temba-loading>
    #rp-flow-editor

