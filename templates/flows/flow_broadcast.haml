-extends 'smartmin/form.html'
-load smartmin
-load i18n

-block fields

  %style
    :plain
      .modal .modal-body .control-label {
        display:none;
      }

      .modal .modal-body .controls {
        margin-top: 6px;
      }

      .start-options {
        margin-top: 10px;
        color: #666;
      }

      .start-options .form-group {
        margin-top: -15px;
      }

      .start-options > .font-checkbox > .controls > .help-block > label {
        color: #666 !important;
      }

      .hidden {
        display: none;
      }

      .start-type {
        margin-bottom: 10px;
      }

      rp-contact-search {
        font-size: 90%;
      }

      rp-alert {
        margin-bottom: 10px;
      }


  -if object.flow_type == 'M' and not send_channel
    %p
    -blocktrans with name=brand.name
      To get started you need to add a channel to your account. A channel is a phone number or social network
      account which {{ name }} can use to send and receive messages on your behalf. You can choose to use an
      Android phone and your own cell phone plan, or we can connect you with a service provider in your country
      directly.
    %hr
    %p
      -trans "You can always test your flow using the simulator, click"
        %span.glyph.icon-mobile{style:"padding-top:2px;"}
      -trans "on the right to open it."

  -elif object.flow_type == 'V' and not call_channel
    %p
      -blocktrans with name=brand.name
        To get started you need to add a voice-enabled channel to your account. A voice-enabled channel is a
        phone number which {{ name }} can use to make and receive phone calls on your behalf. For example, Twilio
        is a service which provides voice-enabled numbers which you can add as channels in your {{ name }} account.

  -else
    -if warnings
      %rp-alert{level: "warning"}
        -for warning in warnings
          %div= warning

    .field.start-type
      {% render_field 'start_type' %}

    .field.omnibox{class:'{% if not form.start_type.value == "select" %}hidden{%endif%}'}
      {% render_field 'omnibox' %}

    .field.query{class:'{% if form.start_type.value == "select" %}hidden{%endif%}'}
      {% render_field 'contact_query' %}

    .start-options
      .control-group.restart-participants
        %label.control-label{ for:"id_restart_participants" }
          -trans "Restart Participants"
        .controls
          %input#id_restart_participants{ name:"restart_participants", type:"checkbox" }
            .help-block
              %label{ for:"id_restart_participants" }
                -trans "Restart contacts who have already entered this flow"

      .control-group.include-active
        %label.control-label{ for:"id_include_active" }
          -trans "Include Active Contacts"
        .controls
          %input#id_include_active{ name:"include_active", type:"checkbox" }
            .help-block
              %label{ for:"id_include_active" }
                -trans "Interrupt contacts currently active in flows"


-block form-buttons
  -if send_channel
    .form-actions
      %input.btn.btn-primary{type:"submit", value:"{{ submit_button_name }}"}

-block summary
  %p
    -if not run_count
      -trans "This flow has never been started."
    -elif run_count == 1
      %span.attn1
        -trans "This flow has been started once."
    -else
      %span.attn
        -trans "This flow has been started {{ run_count }} times."

    -if complete_count == 1
      -trans "It has been completed"
      %span.attn
        -trans "Once."
    -elif complete_count > 1
      -trans "It has been completed"
        %span.attn
          -trans "{{ complete_count }} times."

-block modal-script
  {{block.super}}
  :javascript

    function addClass(ele, className) {
      ele.classList.add(className);
    }

    function removeClass(ele, className) {
      ele.classList.remove(className);
    }

    var queryField = document.querySelector('.query');
    var recipientsField = document.querySelector('.omnibox');

    document.querySelector("rp-select[name='start_type']").addEventListener("rp-selection", function(evt) {
      var selected = evt.detail.selected;
      if (selected.value === "query") {
        removeClass(queryField, "hidden");
        addClass(recipientsField, "hidden");
      } else {
        addClass(queryField, "hidden");
        removeClass(recipientsField, "hidden");
      }
    });

    $(document).ready(function () {
      useFontCheckbox("#id_restart_participants");
      useFontCheckbox("#id_include_active");
    });
