# Generated by Django 5.1.2 on 2024-12-05 16:19

from django.db import migrations

SQL = """
----------------------------------------------------------------------
-- Handles DELETE statements on contacts_contactgroup_contacts table
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_group_contacts_on_delete() RETURNS TRIGGER AS $$
BEGIN
    -- add negative count for all deleted rows
    INSERT INTO contacts_contactgroupcount("group_id", "count", "is_squashed")
    SELECT o.contactgroup_id, -count(*), FALSE FROM oldtab o GROUP BY 1;

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

----------------------------------------------------------------------
-- Handles INSERT statements on contacts_contactgroup_contacts table
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_group_contacts_on_insert() RETURNS TRIGGER AS $$
BEGIN
    -- add positive count for all new rows
    INSERT INTO contacts_contactgroupcount("group_id", "count", "is_squashed")
    SELECT n.contactgroup_id, count(*), FALSE FROM newtab n GROUP BY 1;

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER temba_group_contacts_on_delete
AFTER DELETE ON contacts_contactgroup_contacts REFERENCING OLD TABLE AS oldtab
FOR EACH STATEMENT EXECUTE PROCEDURE temba_group_contacts_on_delete();

CREATE TRIGGER temba_group_contacts_on_insert
AFTER INSERT ON contacts_contactgroup_contacts REFERENCING NEW TABLE AS newtab
FOR EACH STATEMENT EXECUTE PROCEDURE temba_group_contacts_on_insert();

DROP TRIGGER when_contact_groups_changed_then_update_count_trg ON contacts_contactgroup_contacts;
DROP FUNCTION update_group_count();
"""


class Migration(migrations.Migration):

    dependencies = [
        ("contacts", "0194_alter_contactgroupcount_count"),
        ("sql", "0006_squashed"),
    ]

    operations = [migrations.RunSQL(SQL)]
