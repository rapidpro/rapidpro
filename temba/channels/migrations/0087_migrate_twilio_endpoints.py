# Generated by Django 1.11.6 on 2018-04-19 17:04

import traceback

from twilio.rest import TwilioRestClient

from django.conf import settings
from django.db import migrations
from django.urls import reverse


def update_application_urls(Channel):
    if not settings.IS_PROD:
        return

    for channel in Channel.objects.filter(is_active=True, channel_type="T").select_related("org"):
        if (
            "account_sid" not in channel.config
            or "auth_token" not in channel.config
            or "application_sid" not in channel.config
        ):
            print("Skipping app migration for %s, missing settings in %s" % (channel.uuid, channel.config))
            continue

        try:
            prefix = "https://" + channel.callback_domain

            sms_url = prefix + reverse("courier.t", args=[channel.uuid, "receive"])
            status_url = prefix + reverse("handlers.twilio_handler", args=["status", channel.uuid])

            client = TwilioRestClient(channel.config["account_sid"], channel.config["auth_token"])
            app = client.applications.get(channel.config["application_sid"])

            updates = {}

            # it our sms url is mapped to us but isn't correct, update it
            if app.sms_url != sms_url and app.sms_url.startswith(prefix):
                updates["sms_url"] = sms_url

            if app.status_callback != status_url and app.status_callback.startswith(prefix):
                updates["status_callback"] = status_url

            if updates:
                print("Updating %s with %s" % (channel.uuid, updates))
                client.applications.update(channel.config["application_sid"], **updates)

        except Exception:
            print("Error updating %s" % channel.uuid)
            traceback.print_exc()


def apply_as_migration(apps, schema_editor):
    from temba.channels.models import Channel

    update_application_urls(Channel)


def apply_manual():
    from temba.channels.models import Channel

    update_application_urls(Channel)


class Migration(migrations.Migration):

    dependencies = [("channels", "0086_update_dart_hu9_schemes")]

    operations = [migrations.RunPython(apply_as_migration)]
