# Generated by Django 2.1.8 on 2019-07-01 20:59

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import temba.utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("orgs", "0055_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("flows", "0203_initial"),
        ("contacts", "0102_contacturn_channel"),
    ]

    operations = [
        migrations.CreateModel(
            name="Campaign",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this item is active, use this instead of deleting"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was originally created",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was last modified",
                    ),
                ),
                (
                    "uuid",
                    models.CharField(
                        db_index=True,
                        default=temba.utils.models.generate_uuid,
                        help_text="The unique identifier for this object",
                        max_length=36,
                        unique=True,
                        verbose_name="Unique Identifier",
                    ),
                ),
                ("name", models.CharField(help_text="The name of this campaign", max_length=255)),
                (
                    "is_archived",
                    models.BooleanField(default=False, help_text="Whether this campaign is archived or not"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The user which originally created this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="campaigns_campaign_creations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="The group this campaign operates on",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="contacts.ContactGroup",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="The user which last modified this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="campaigns_campaign_modifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        help_text="The organization this campaign exists for",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="orgs.Org",
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="CampaignEvent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this item is active, use this instead of deleting"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was originally created",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was last modified",
                    ),
                ),
                (
                    "uuid",
                    models.CharField(
                        db_index=True,
                        default=temba.utils.models.generate_uuid,
                        help_text="The unique identifier for this object",
                        max_length=36,
                        unique=True,
                        verbose_name="Unique Identifier",
                    ),
                ),
                (
                    "offset",
                    models.IntegerField(
                        default=0, help_text="The offset in days from our date (positive is after, negative is before)"
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[("M", "Minutes"), ("H", "Hours"), ("D", "Days"), ("W", "Weeks")],
                        default="D",
                        help_text="The unit for the offset for this event",
                        max_length=1,
                    ),
                ),
                (
                    "start_mode",
                    models.CharField(
                        choices=[("I", "Interrupt"), ("S", "Skip"), ("P", "Passive")],
                        default="I",
                        help_text="The start mode of this event",
                        max_length=1,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[("F", "Flow Event"), ("M", "Message Event")],
                        default="F",
                        help_text="The type of this event",
                        max_length=1,
                    ),
                ),
                ("message", temba.utils.models.TranslatableField(max_length=640, null=True)),
                (
                    "delivery_hour",
                    models.IntegerField(default=-1, help_text="The hour to send the message or flow at."),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        help_text="The campaign this event is part of",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="events",
                        to="campaigns.Campaign",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The user which originally created this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="campaigns_campaignevent_creations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "flow",
                    models.ForeignKey(
                        help_text="The flow that will be triggered",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="events",
                        to="flows.Flow",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="The user which last modified this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="campaigns_campaignevent_modifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "relative_to",
                    models.ForeignKey(
                        help_text="The field our offset is relative to",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="campaigns",
                        to="contacts.ContactField",
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="EventFire",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("scheduled", models.DateTimeField(help_text="When this event is scheduled to run")),
                (
                    "fired",
                    models.DateTimeField(
                        blank=True, help_text="When this event actually fired, null if not yet fired", null=True
                    ),
                ),
                (
                    "fired_result",
                    models.CharField(
                        blank=True,
                        choices=[("F", "Fired"), ("S", "Skipped")],
                        help_text="Whether the event is fired or skipped, null if not yet fired",
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        help_text="The contact that is scheduled to have an event run",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="fire_events",
                        to="contacts.Contact",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        help_text="The event that will be fired",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="event_fires",
                        to="campaigns.CampaignEvent",
                    ),
                ),
            ],
            options={"ordering": ("scheduled",)},
        ),
    ]
