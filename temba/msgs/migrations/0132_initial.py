# Generated by Django 2.1.8 on 2019-07-01 20:58

import uuid

import django.contrib.postgres.fields
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
from django.conf import settings
from django.contrib.postgres.operations import HStoreExtension
from django.db import migrations, models

import temba.utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("orgs", "0055_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contacts", "0102_contacturn_channel"),
        ("schedules", "0008_initial"),
        ("channels", "0119_initial"),
    ]

    operations = [
        HStoreExtension(),
        migrations.CreateModel(
            name="Broadcast",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "recipient_count",
                    models.IntegerField(
                        help_text="Number of urns which received this broadcast",
                        null=True,
                        verbose_name="Number of recipients",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("I", "Initializing"),
                            ("P", "Pending"),
                            ("Q", "Queued"),
                            ("W", "Wired"),
                            ("S", "Sent"),
                            ("D", "Delivered"),
                            ("H", "Handled"),
                            ("E", "Error Sending"),
                            ("F", "Failed Sending"),
                            ("R", "Resent message"),
                        ],
                        default="I",
                        help_text="The current status for this broadcast",
                        max_length=1,
                        verbose_name="Status",
                    ),
                ),
                (
                    "text",
                    temba.utils.models.TranslatableField(
                        help_text="The localized versions of the message text",
                        max_length=640,
                        verbose_name="Translations",
                    ),
                ),
                (
                    "base_language",
                    models.CharField(
                        help_text="The language used to send this to contacts without a language", max_length=4
                    ),
                ),
                ("is_active", models.BooleanField(default=True, help_text="Whether this broadcast is active")),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this broadcast was created",
                    ),
                ),
                ("modified_on", models.DateTimeField(auto_now=True, help_text="When this item was last modified")),
                (
                    "purged",
                    models.BooleanField(
                        default=False, help_text="If the messages for this broadcast have been purged"
                    ),
                ),
                (
                    "media",
                    temba.utils.models.TranslatableField(
                        help_text="The localized versions of the media",
                        max_length=2048,
                        null=True,
                        verbose_name="Media",
                    ),
                ),
                (
                    "send_all",
                    models.BooleanField(
                        default=False, help_text="Whether this broadcast should send to all URNs for each contact"
                    ),
                ),
                (
                    "metadata",
                    temba.utils.models.JSONAsTextField(
                        default=dict, help_text="The metadata for messages of this broadcast", null=True
                    ),
                ),
                (
                    "channel",
                    models.ForeignKey(
                        help_text="Channel to use for message sending",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="channels.Channel",
                        verbose_name="Channel",
                    ),
                ),
                (
                    "contacts",
                    models.ManyToManyField(
                        help_text="Individual contacts included in this message",
                        related_name="addressed_broadcasts",
                        to="contacts.Contact",
                        verbose_name="Contacts",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The user which originally created this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs_broadcast_creations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        help_text="The groups to send the message to",
                        related_name="addressed_broadcasts",
                        to="contacts.ContactGroup",
                        verbose_name="Groups",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="The user which last modified this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs_broadcast_modifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        help_text="The org this broadcast is connected to",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="orgs.Org",
                        verbose_name="Org",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="children",
                        to="msgs.Broadcast",
                        verbose_name="Parent",
                    ),
                ),
                (
                    "schedule",
                    models.OneToOneField(
                        help_text="Our recurring schedule if we have one",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="broadcast",
                        to="schedules.Schedule",
                        verbose_name="Schedule",
                    ),
                ),
                (
                    "urns",
                    models.ManyToManyField(
                        help_text="Individual URNs included in this message",
                        related_name="addressed_broadcasts",
                        to="contacts.ContactURN",
                        verbose_name="URNs",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BroadcastMsgCount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_squashed",
                    models.BooleanField(default=False, help_text="Whether this row was created by squashing"),
                ),
                ("count", models.IntegerField(default=0)),
                (
                    "broadcast",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="counts", to="msgs.Broadcast"
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="ExportMessagesTask",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this item is active, use this instead of deleting"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was originally created",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was last modified",
                    ),
                ),
                (
                    "uuid",
                    models.CharField(
                        db_index=True,
                        default=temba.utils.models.generate_uuid,
                        help_text="The unique identifier for this object",
                        max_length=36,
                        unique=True,
                        verbose_name="Unique Identifier",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("P", "Pending"), ("O", "Processing"), ("C", "Complete"), ("F", "Failed")],
                        default="P",
                        max_length=1,
                    ),
                ),
                ("system_label", models.CharField(max_length=1, null=True)),
                (
                    "start_date",
                    models.DateField(blank=True, help_text="The date for the oldest message to export", null=True),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, help_text="The date for the newest message to export", null=True),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The user which originally created this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs_exportmessagestask_creations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("groups", models.ManyToManyField(to="contacts.ContactGroup")),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this item is active, use this instead of deleting"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was originally created",
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="When this item was last modified",
                    ),
                ),
                (
                    "uuid",
                    models.CharField(
                        db_index=True,
                        default=temba.utils.models.generate_uuid,
                        help_text="The unique identifier for this object",
                        max_length=36,
                        unique=True,
                        verbose_name="Unique Identifier",
                    ),
                ),
                ("name", models.CharField(help_text="The name of this label", max_length=64, verbose_name="Name")),
                (
                    "label_type",
                    models.CharField(
                        choices=[("F", "Folder of labels"), ("L", "Regular label")],
                        default="L",
                        help_text="Label type",
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="The user which originally created this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs_label_creations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="children",
                        to="msgs.Label",
                        verbose_name="Folder",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="The user which last modified this item",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs_label_modifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("org", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="orgs.Org")),
            ],
            managers=[("all_objects", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="LabelCount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_squashed",
                    models.BooleanField(default=False, help_text="Whether this row was created by squashing"),
                ),
                (
                    "is_archived",
                    models.BooleanField(default=False, help_text="Whether this count is for archived messages"),
                ),
                ("count", models.IntegerField(default=0, help_text="Number of items with this system label")),
                (
                    "label",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="counts", to="msgs.Label"
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Msg",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(default=uuid.uuid4, help_text="The UUID for this message", null=True)),
                ("text", models.TextField(help_text="The actual message content that was sent", verbose_name="Text")),
                (
                    "high_priority",
                    models.BooleanField(help_text="Give this message higher priority than other messages", null=True),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        db_index=True, help_text="When this message was created", verbose_name="Created On"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this message was last modified",
                        null=True,
                        verbose_name="Modified On",
                    ),
                ),
                (
                    "sent_on",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this message was sent to the endpoint",
                        null=True,
                        verbose_name="Sent On",
                    ),
                ),
                (
                    "queued_on",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this message was queued to be sent or handled.",
                        null=True,
                        verbose_name="Queued On",
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[("I", "Incoming"), ("O", "Outgoing")],
                        help_text="The direction for this message, either incoming or outgoing",
                        max_length=1,
                        verbose_name="Direction",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("I", "Initializing"),
                            ("P", "Pending"),
                            ("Q", "Queued"),
                            ("W", "Wired"),
                            ("S", "Sent"),
                            ("D", "Delivered"),
                            ("H", "Handled"),
                            ("E", "Error Sending"),
                            ("F", "Failed Sending"),
                            ("R", "Resent message"),
                        ],
                        db_index=True,
                        default="P",
                        help_text="The current status for this message",
                        max_length=1,
                        verbose_name="Status",
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[("V", "Visible"), ("A", "Archived"), ("D", "Deleted")],
                        default="V",
                        help_text="The current visibility of this message, either visible, archived or deleted",
                        max_length=1,
                        verbose_name="Visibility",
                    ),
                ),
                (
                    "msg_type",
                    models.CharField(
                        choices=[
                            ("I", "Inbox Message"),
                            ("F", "Flow Message"),
                            ("V", "IVR Message"),
                            ("U", "USSD Message"),
                        ],
                        help_text="The type of this message",
                        max_length=1,
                        null=True,
                        verbose_name="Message Type",
                    ),
                ),
                (
                    "msg_count",
                    models.IntegerField(
                        default=1,
                        help_text="The number of messages that were used to send this message, calculated on Twilio channels",
                        verbose_name="Message Count",
                    ),
                ),
                (
                    "error_count",
                    models.IntegerField(
                        default=0, help_text="The number of times this message has errored", verbose_name="Error Count"
                    ),
                ),
                (
                    "next_attempt",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When we should next attempt to deliver this message",
                        verbose_name="Next Attempt",
                    ),
                ),
                (
                    "external_id",
                    models.CharField(
                        blank=True,
                        help_text="External id used for integrating with callbacks from other APIs",
                        max_length=255,
                        null=True,
                        verbose_name="External ID",
                    ),
                ),
                (
                    "attachments",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.URLField(max_length=2048),
                        help_text="The media attachments on this message if any",
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "metadata",
                    temba.utils.models.JSONAsTextField(default=dict, help_text="The metadata for this msg", null=True),
                ),
                (
                    "delete_reason",
                    models.CharField(
                        choices=[("A", "Archive delete"), ("U", "User delete")],
                        help_text="Why the message is being deleted",
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "broadcast",
                    models.ForeignKey(
                        blank=True,
                        help_text="If this message was sent to more than one recipient",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="msgs.Broadcast",
                        verbose_name="Broadcast",
                    ),
                ),
                (
                    "channel",
                    models.ForeignKey(
                        help_text="The channel object that this message is associated with",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="channels.Channel",
                        verbose_name="Channel",
                    ),
                ),
                (
                    "connection",
                    models.ForeignKey(
                        help_text="The session this message was a part of if any",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="channels.ChannelConnection",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        db_index=False,
                        help_text="The contact this message is communicating with",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="contacts.Contact",
                        verbose_name="Contact",
                    ),
                ),
                (
                    "contact_urn",
                    models.ForeignKey(
                        help_text="The URN this message is communicating with",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="contacts.ContactURN",
                        verbose_name="Contact URN",
                    ),
                ),
                (
                    "labels",
                    models.ManyToManyField(
                        help_text="Any labels on this message",
                        related_name="msgs",
                        to="msgs.Label",
                        verbose_name="Labels",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        help_text="The org this message is connected to",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="orgs.Org",
                        verbose_name="Org",
                    ),
                ),
                (
                    "response_to",
                    models.ForeignKey(
                        blank=True,
                        db_index=False,
                        help_text="The message that this message is in reply to",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="responses",
                        to="msgs.Msg",
                        verbose_name="Response To",
                    ),
                ),
                (
                    "topup",
                    models.ForeignKey(
                        blank=True,
                        help_text="The topup that this message was deducted from",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="msgs",
                        to="orgs.TopUp",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SystemLabelCount",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "is_squashed",
                    models.BooleanField(default=False, help_text="Whether this row was created by squashing"),
                ),
                (
                    "label_type",
                    models.CharField(
                        choices=[
                            ("I", "Inbox"),
                            ("W", "Flows"),
                            ("A", "Archived"),
                            ("O", "Outbox"),
                            ("S", "Sent"),
                            ("X", "Failed"),
                            ("E", "Scheduled"),
                            ("C", "Calls"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "is_archived",
                    models.BooleanField(default=False, help_text="Whether this count is for archived messages"),
                ),
                ("count", models.IntegerField(default=0, help_text="Number of items with this system label")),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="system_labels", to="orgs.Org"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="exportmessagestask",
            name="label",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to="msgs.Label"),
        ),
        migrations.AddField(
            model_name="exportmessagestask",
            name="modified_by",
            field=models.ForeignKey(
                help_text="The user which last modified this item",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="msgs_exportmessagestask_modifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="exportmessagestask",
            name="org",
            field=models.ForeignKey(
                help_text="The organization of the user.",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="exportmessagestasks",
                to="orgs.Org",
            ),
        ),
        migrations.AlterIndexTogether(name="systemlabelcount", index_together={("org", "label_type")}),
        migrations.AlterUniqueTogether(name="label", unique_together={("org", "name")}),
    ]
