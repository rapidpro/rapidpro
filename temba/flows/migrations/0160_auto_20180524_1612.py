# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-05-24 16:12
from __future__ import unicode_literals

import iso8601

from django.db import migrations
from django.utils import timezone


def remove_never_expirations(apps, schema_editor):
    # do nothing for a clean database - don't even try to load the model class
    FlowRun = apps.get_model("flows", "FlowRun")
    if not FlowRun.objects.exists():
        return

    from temba.flows.models import Flow, FlowRun

    # for every flow that has an expiration set to 0
    for flow in Flow.objects.filter(expires_after_minutes=0):
        # set the expiration to 30 days
        flow.expires_after_minutes = 60 * 24 * 30
        flow.save(update_fields=["expires_after_minutes"])

        # recalculate expiration on any active runs (possibly expiring them)
        for run in FlowRun.objects.filter(flow=flow, is_active=True):
            run.flow = flow
            if run.path:
                last_arrived_on = iso8601.parse_date(run.path[-1]["arrived_on"])
                run.update_expiration(last_arrived_on)

    # check and expire any flows that are now expired
    runs = FlowRun.objects.filter(is_active=True, expires_on__lte=timezone.now()).order_by("expires_on")
    FlowRun.bulk_exit(runs, FlowRun.EXIT_TYPE_EXPIRED)


class Migration(migrations.Migration):

    dependencies = [("flows", "0159_auto_20180522_1851")]

    operations = [migrations.RunPython(remove_never_expirations)]
