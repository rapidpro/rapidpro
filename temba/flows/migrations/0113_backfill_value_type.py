# Generated by Django 1.11.2 on 2017-10-18 15:37

from django.db import migrations

from temba.utils import chunk_list


def backfill_value_type(apps, schema_editor):
    from temba.flows.models import RuleSet

    ruleset_ids = RuleSet.objects.all().only("id").values_list("id", flat=True)
    if ruleset_ids:
        print("found %d rulesets to set value type on" % len(ruleset_ids))
    count = 0

    for batch in chunk_list(ruleset_ids, 1000):
        rulesets = RuleSet.objects.filter(id__in=batch)
        for ruleset in rulesets:
            try:
                value_type = ruleset.get_value_type()
                if value_type != "T":
                    ruleset.value_type = value_type
                    ruleset.save(update_fields=["value_type"])

            except Exception:  # pragma: no cover
                # unmigrated rulesets may blow up, that's ok, their value type will be set when brought forwards by a run
                pass

        count += len(batch)
        print("%d visited" % count)


class Migration(migrations.Migration):

    dependencies = [("flows", "0112_fix_sql_func")]

    operations = [migrations.RunPython(backfill_value_type)]
