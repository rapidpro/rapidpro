# Generated by Django 1.10.6 on 2017-04-05 14:47

from django.db import migrations
from django.utils import timezone

from temba.utils import chunk_list


def apply_as_migration(apps, schema_editor):
    Flow = apps.get_model("flows", "Flow")
    FlowRun = apps.get_model("flows", "FlowRun")
    FlowStep = apps.get_model("flows", "FlowStep")

    flows = Flow.objects.filter(is_archived=True)
    for flow in flows:
        runs = FlowRun.objects.filter(is_active=True, exit_type=None, flow_id=flow.id)
        run_ids = list(runs.values_list("id", flat=True))

        # batch this for 1,000 runs at a time so we don't grab locks for too long
        for id_batch in chunk_list(run_ids, 1000):
            now = timezone.now()

            # mark all steps in these runs as having been left
            FlowStep.objects.filter(run__id__in=id_batch, left_on=None).update(left_on=now)

            runs = FlowRun.objects.filter(id__in=id_batch)
            runs.update(is_active=False, exited_on=now, exit_type="I", modified_on=now)


def apply_manual():
    from temba.flows.models import Flow, FlowRun

    flows = Flow.objects.filter(is_archived=True)
    for flow in flows:
        runs = FlowRun.objects.filter(is_active=True, exit_type=None, flow_id=flow.id)
        FlowRun.bulk_exit(runs, FlowRun.EXIT_TYPE_INTERRUPTED)


class Migration(migrations.Migration):

    dependencies = [("flows", "0096_populate_flownodecount")]

    operations = [migrations.RunPython(apply_as_migration)]
