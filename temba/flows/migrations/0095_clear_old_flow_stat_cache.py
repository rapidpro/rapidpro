# Generated by Django 1.10.5 on 2017-03-30 08:11

from django_redis import get_redis_connection

from django.db import migrations

KEY_NAMES = (
    "runs_started_count",
    "runs_completed_count",
    "contacts_started_set",
    "step_active_set",
    "visit_count_map",
    "cache_check",
)


def clean_old_flow_stat_cache(apps, schema_migration):
    r = get_redis_connection()
    for val in KEY_NAMES:
        key_pattern = "org:*:cache:flow:*:%s" % val
        num_deleted = 0
        cursor = 0
        while True:
            cursor, keys = r.scan(cursor, match=key_pattern)
            if keys:
                r.delete(*keys)
                num_deleted += len(keys)
            if cursor == 0:
                break

        if num_deleted:
            print("Deleted %d redis keys matching pattern %s" % (num_deleted, key_pattern))


class Migration(migrations.Migration):

    dependencies = [("flows", "0094_update_step_trigger")]

    operations = [migrations.RunPython(clean_old_flow_stat_cache)]
