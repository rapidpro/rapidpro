# Generated by Django 5.1.2 on 2024-12-04 16:07

from django.db import migrations

SQL = """
----------------------------------------------------------------------
-- Handles changes to a flow run
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_flowrun_on_change() RETURNS TRIGGER AS $$
BEGIN
    -- restrict status changes
    IF OLD.status NOT IN ('A', 'W') AND NEW.status IN ('A', 'W') THEN RAISE EXCEPTION 'Cannot restart an exited flow run'; END IF;

    -- we don't support rewinding run paths so the new path must contain the old
    IF NOT (COALESCE(NEW.path_nodes, '{}'::uuid[]) @> COALESCE(OLD.path_nodes, '{}'::uuid[])) THEN
        RAISE EXCEPTION 'Cannot rewind a flow run path (old=%, new=%)', array_length(OLD.path_nodes, 1), array_length(NEW.path_nodes, 1);
    END IF;

  RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER temba_flowrun_on_change
    AFTER UPDATE ON flows_flowrun
    FOR EACH ROW EXECUTE PROCEDURE temba_flowrun_on_change();

DROP TRIGGER temba_flowrun_status_change ON flows_flowrun;
DROP TRIGGER temba_flowrun_path_change ON flows_flowrun;

DROP FUNCTION temba_flowrun_status_change();
DROP FUNCTION temba_flowrun_path_change();
"""


class Migration(migrations.Migration):

    dependencies = [("flows", "0347_flowrun_path_nodes_flowrun_path_times")]

    operations = [migrations.RunSQL(SQL)]
