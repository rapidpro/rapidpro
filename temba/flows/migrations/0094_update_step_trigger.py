# Generated by Django 1.10.5 on 2017-03-30 10:57

from django.db import migrations

SQL = """
----------------------------------------------------------------------
-- Utility function to return the appropriate from uuid
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_step_from_uuid(_row flows_flowstep) RETURNS UUID AS $$
BEGIN
  IF _row.rule_uuid IS NOT NULL THEN
    RETURN UUID(_row.rule_uuid);
  END IF;

  RETURN UUID(_row.step_uuid);
END;
$$ LANGUAGE plpgsql;

----------------------------------------------------------------------
-- Inserts a new FlowNodeCount
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_insert_flownodecount(_flow_id INTEGER, _node_uuid UUID, _count INTEGER) RETURNS VOID AS $$
  BEGIN
    INSERT INTO flows_flownodecount("flow_id", "node_uuid", "count", "is_squashed")
      VALUES(_flow_id, _node_uuid, _count, FALSE);
  END;
$$ LANGUAGE plpgsql;

----------------------------------------------------------------------
-- Keeps track of our flowpathcounts as steps are updated
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_update_flowpathcount() RETURNS TRIGGER AS $$
DECLARE flow_id int;
BEGIN

  IF TG_OP = 'TRUNCATE' THEN
    -- FlowStep table being cleared, reset all counts
    DELETE FROM flows_flownodecount;
    DELETE FROM flows_flowpathcount;

  -- FlowStep being deleted
  ELSIF TG_OP = 'DELETE' THEN

    -- ignore if test contact
    IF temba_contact_is_test(OLD.contact_id) THEN
      RETURN NULL;
    END IF;

    flow_id = temba_flow_for_run(OLD.run_id);

    IF OLD.left_on IS NULL THEN
      PERFORM temba_insert_flownodecount(flow_id, UUID(OLD.step_uuid), -1);
    ELSE
      PERFORM temba_insert_flowpathcount(flow_id, temba_step_from_uuid(OLD), UUID(OLD.next_uuid), OLD.left_on, -1);
    END IF;

  -- FlowStep being added or left_on field updated
  ELSIF TG_OP = 'INSERT' OR TG_OP = 'UPDATE' THEN

    -- ignore if test contact
    IF temba_contact_is_test(NEW.contact_id) THEN
      RETURN NULL;
    END IF;

    flow_id = temba_flow_for_run(NEW.run_id);

    IF NEW.left_on IS NULL THEN
      PERFORM temba_insert_flownodecount(flow_id, UUID(NEW.step_uuid), 1);
    ELSE
      PERFORM temba_insert_flowpathcount(flow_id, temba_step_from_uuid(NEW), UUID(NEW.next_uuid), NEW.left_on, 1);
    END IF;

    IF TG_OP = 'UPDATE' THEN
      IF OLD.left_on IS NULL THEN
        PERFORM temba_insert_flownodecount(flow_id, UUID(OLD.step_uuid), -1);
      ELSE
        PERFORM temba_insert_flowpathcount(flow_id, temba_step_from_uuid(OLD), UUID(OLD.next_uuid), OLD.left_on, -1);
      END IF;
    END IF;
  END IF;
  RETURN NULL;
END;
$$ LANGUAGE plpgsql;
"""


class Migration(migrations.Migration):

    dependencies = [("flows", "0093_flownodecount")]

    operations = [migrations.RunSQL(SQL)]
