# Generated by Django 5.1.2 on 2024-10-30 14:24

from django.db import migrations

SQL = """
----------------------------------------------------------------------
-- Determines the item count scope for a ticket
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_ticket_countscope(_ticket tickets_ticket) RETURNS TEXT STABLE AS $$
BEGIN
    RETURN format('tickets:%s:%s:%s', _ticket.status, _ticket.topic_id, COALESCE(_ticket.assignee_id, 0));
END;
$$ LANGUAGE plpgsql;

----------------------------------------------------------------------
-- Handles INSERT statements on ticket table
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_ticket_on_insert() RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO orgs_itemcount("org_id", "scope", "count", "is_squashed")
    SELECT org_id, temba_ticket_countscope(newtab), count(*), FALSE FROM newtab
    GROUP BY 1, 2;

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

----------------------------------------------------------------------
-- Handles DELETE statements on ticket table
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_ticket_on_delete() RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO orgs_itemcount("org_id", "scope", "count", "is_squashed")
    SELECT org_id, temba_ticket_countscope(oldtab), -count(*), FALSE FROM oldtab
    GROUP BY 1, 2;

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

----------------------------------------------------------------------
-- Handles UPDATE statements on ticket table
----------------------------------------------------------------------
CREATE OR REPLACE FUNCTION temba_ticket_on_update() RETURNS TRIGGER AS $$
BEGIN
    -- add negative counts for all old count scopes that don't match the new ones
    INSERT INTO orgs_itemcount("org_id", "scope", "count", "is_squashed")
    SELECT o.org_id, temba_ticket_countscope(o), -count(*), FALSE FROM oldtab o
    INNER JOIN newtab n ON n.id = o.id
    WHERE temba_ticket_countscope(o) != temba_ticket_countscope(n)
    GROUP BY 1, 2;

    -- add positive counts for all new count scopes that don't match the old ones
    INSERT INTO orgs_itemcount("org_id", "scope", "count", "is_squashed")
    SELECT n.org_id, temba_ticket_countscope(n), count(*), FALSE FROM newtab n
    INNER JOIN oldtab o ON o.id = n.id
    WHERE temba_ticket_countscope(o) != temba_ticket_countscope(n)
    GROUP BY 1, 2;

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;


CREATE TRIGGER temba_ticket_on_delete
AFTER DELETE ON tickets_ticket REFERENCING OLD TABLE AS oldtab
FOR EACH STATEMENT EXECUTE PROCEDURE temba_ticket_on_delete();

CREATE TRIGGER temba_ticket_on_insert
AFTER INSERT ON tickets_ticket REFERENCING NEW TABLE AS newtab
FOR EACH STATEMENT EXECUTE PROCEDURE temba_ticket_on_insert();

CREATE TRIGGER temba_ticket_on_update
AFTER UPDATE ON tickets_ticket REFERENCING OLD TABLE AS oldtab NEW TABLE AS newtab
FOR EACH STATEMENT EXECUTE PROCEDURE temba_ticket_on_update();
"""


class Migration(migrations.Migration):

    dependencies = [("tickets", "0069_assign_agents_to_default_team")]

    operations = [migrations.RunSQL(SQL)]
