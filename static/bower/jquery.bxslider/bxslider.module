<?php


/**
 * Implements hook_menu().
 */
function bxslider_menu() {
  $items['bxslider/ajax/views'] = array(
    'page callback' => 'bxslider_views_ajax',
    'access callback' => TRUE,
    'file' => 'includes/bxslider.views.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_init().
 */
function bxslider_init() {
  // Global JS settings required for all carousels.
  drupal_add_js(array('bxslider' => array('ajaxPath' => url('bxslider/ajax/views'))), 'setting');
}

/**
 * Implements hook_theme().
 */
function bxslider_theme() {
  return array(
    'bxslider' => array(
      'variables' => array('items' => NULL, 'options' => NULL, 'identifier' => NULL),
    ),
  );
}

/**
 * Implements hook_views_api().
 */
function bxslider_views_api() {
  return array(
    'api' => 2.0,
    'path' => drupal_get_path('module', 'bxslider') . '/includes',
  );
}

/**
 * Implements hook_bxslider_skin_info().
 */
function bxslider_bxslider_skin_info() {
  $skins = array();

  $skins['default'] = array(
    'title' => t('Default'),
    'file' => 'skins/jquery.bxslider.css',
  );
 
  return $skins;
}

/**
 * Adds all the necessary CSS and JS necessary for building a carousel.
 *
 * @param $class_name
 *   (optional) The class on the UL list to identify this carousel. If ommitted,
 *   only the bxslider library will be added to the page.
 * @param $options
 *   (optional) A list of settings to be passed to bxslider.
 * @param $add
 *   Whether to add the JavaScript and CSS to the page with drupal_add_js().
 * @return
 *   An array of JS and CSS files, suitable for inclusion as an #attached array.
 */
function bxslider_add($class_name = NULL, $options = array(), $add = TRUE) {
  static $library_added;

    $attachments = array(
  
    'js' => array(
	  drupal_get_path('module', 'bxslider') . '/js/jquery.bxslider.js',
      drupal_get_path('module', 'bxslider') . '/js/bxslider.js',
    ),
  );

  if (isset($class_name)) {
    // Set default options.
    $options += array(
      'skin' => 'default',
      'selector' => '.' . $class_name,
    );

    // Allow other modules to modify these settings.
    drupal_alter('bxslider_options', $options, $class_name);

    // Add settings for this individual carousel.
    if (!isset($library_added[$class_name]) || !$add) {
      $library_added[$class_name] = TRUE;

      // Add the JavaScript settings for this carousel.
      $js_settings = array(
        'bxslider' => array(
          'sliderBx' => array(
            $class_name => $options,
          ),
        ),
      );
      $attachments['js'][] = array(
        'type' => 'setting',
        'data' => $js_settings,
      );
    }
  }

  // Add the skin for this carousel.
  if (!empty($options['skin'])) {
    // A custom skin path is possible but generally discouraged because it's
    // difficult to give it a human-readable name or reference the CSS file.
    if (isset($options['skin path'])) {
      $attachments['css'][] = $options['skin path'];
    }
    // The more common situation is to use a skin defined by another module
    // in hook_bxslider_skin_info().
    elseif (($skins = bxslider_skins()) && isset($skins[$options['skin']])) {
      $skin = $skins[$options['skin']];
      $attachments['css'][] = $skin['file path'] . '/' . $skin['file'];
    }
  }

  // If adding directly to the page, loop through our attachments and add them.
  if ($add) {
    foreach ($attachments as $type => $type_list) {
      $drupal_add_type = 'drupal_add_' . $type;
      foreach ($type_list as $attachment) {
        if (is_array($attachment)) {
          $drupal_add_type($attachment['data'], $attachment['type']);
        }
        else {
          $drupal_add_type($attachment);
        }
      }
    }
  }

  return $attachments;
}

/**
 * Retrieves a list of all available Carousel skins.
 */
function bxslider_skins() {
  static $skins;

  // Don't rebuild if we already have a list of skins.
  if (isset($skins)) {
    return $skins;
  }

  // Build a list of skins from other modules.
  $skins = array();
  foreach (module_implements('bxslider_skin_info') as $module) {
    $function = $module . '_bxslider_skin_info';
    $module_skins = $function();
    foreach ($module_skins as $key => $skin) {
      $skin['module'] = $module;
      $skin['file path'] = isset($skin['file path']) ? $skin['file path'] : drupal_get_path('module', $module);
      $skin['title'] = isset($skin['title']) ? $skin['title'] : $key;
      $skins[$key] = $skin;
    }
  }
  ksort($skins);
  return $skins;
}

/**
 *
 *
 * Creates a bxslider element on the page.
 *
 * 
 */
function theme_bxslider($variables) {
  $items = $variables['items'];
  $options = $variables['options'];
  $identifier = $variables['identifier'];
  static $unique;

  if (!isset($identifier)) {
    $unique = isset($unique) ? $unique + 1 : 1;
    $identifier = 'bxslider-id-' . $unique;
  }

  $options['skin'] = array_key_exists('skin', $options) ? $options['skin'] : 'default';
  bxslider_add($identifier, $options);

  $classes = 'bxslider ' . $identifier;
  if (!empty($options['skin'])) {
    $classes .= ' bxslider-skin-' . $options['skin'];
  }

  $output = '<div class="' . $classes . '">';
  if (is_array($items)) {
    foreach ($items as $item) {
      $output .= '<div class="slide">' . $item . '</div>';
    }
  }
  $output .= '</div>';
  exit;
  return $output;
}
